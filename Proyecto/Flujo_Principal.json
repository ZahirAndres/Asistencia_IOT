[
    {
        "id": "ffe91d66cf0eac12",
        "type": "tab",
        "label": "Web_Asistencia",
        "disabled": false,
        "info": "# Flujo del desarrllo de la Web",
        "env": []
    },
    {
        "id": "ff05e97df14b55f8",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "Interfaces",
        "style": {
            "stroke": "#9363b7",
            "fill": "#dbcbe7",
            "fill-opacity": "0.73",
            "label": true,
            "label-position": "n",
            "color": "#6f2fa0"
        },
        "nodes": [
            "8a97b1b4b5ef37a9",
            "08aee3e88fb86e4f",
            "22f961476e471b4f",
            "2bf28d50fabc0ba5",
            "428fcf9604bb40dd",
            "70e413862964023d",
            "e9921588a4c8af2a",
            "6590fee38e0d39ec",
            "42a8d86eb9fc2c1a",
            "d47a6dd73e9437f4",
            "363408f38d51b67d",
            "c19a02752dd5d60f",
            "3ae552824e509d74",
            "9778063d7fbef4f4",
            "6d344378e091776c",
            "1a660c73d86ca9dc",
            "ce177269aea0ed53",
            "6ce3ed1492e480ac",
            "0b970e7d89606168",
            "6b6e6ad5fe943f91",
            "06c78906321a9b15",
            "3030207c98727547",
            "d13dd459f80082ff",
            "aa65dfe565d09394"
        ],
        "x": 1834,
        "y": 399,
        "w": 592,
        "h": 362
    },
    {
        "id": "20d0ae3548c13292",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "CRUDs básicos",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfc7d7",
            "fill-opacity": "0.57",
            "label": true,
            "label-position": "n",
            "color": "#3f5787"
        },
        "nodes": [
            "2acfb19d94b31d56",
            "6b7996fe0d35c224",
            "6a4b38f45a6d1f7a",
            "e7788388e404096c",
            "f9f182453a47a1fd",
            "aeee0e989b420210",
            "8037fd13962a2cac",
            "9c51cdb856aa0086",
            "0ecf7aff76c49c4f",
            "cbb69270c3659e8c",
            "ae6d7ffde7f54c4d",
            "800970495a3d26da",
            "e343d08b38bf589d",
            "1cbf8571de412611",
            "53494eea20ab5341",
            "d60201b7eb73d6c5",
            "853ab37bc2c3e9d3",
            "31fcf8734d8fc915",
            "18f5df8f2fbf8da8",
            "2628282219fae0f6",
            "d860361f05755083",
            "138ae49bf1bc17e8",
            "271e3cf705fa1f87",
            "a77b5a9154476868",
            "e5032edd4184325c",
            "097a517e2dc882d2",
            "6a1751ce1cce11c7",
            "d55eee85fd1d9b38",
            "46155e98c1c2702d",
            "ddffe9f12d8c295d",
            "1f7e010f1bb2aa0f",
            "b1fa0e5eb197def9",
            "7f3f099141fe6ff5",
            "bab66aa49cdaa095",
            "bbce614acc95c801",
            "9ba95dc6ae620901",
            "110a77c034b2b569",
            "85a0efb009bd47b9",
            "00216ea41236c1b2",
            "a3b8b7413a56816c",
            "51e095ad64fa8b95",
            "c3d7c5c4c44b9102",
            "0d23e78e615e5d9a",
            "f9d9fcc923e39c7b",
            "54dce4bd5c754d68",
            "ce0c4197b00c849f",
            "656c19da6271f627",
            "8c3668dd60e11f05",
            "316b1c1fc01e3573",
            "a99601dbd87f30ff",
            "2acddc78450303ac",
            "acc95d3c37ceb5ba",
            "0b52c734eebde2bc",
            "f6c2ef37e6dd8c62",
            "bec8795d5a4dc3a9",
            "ff728f361b696c81",
            "3ebe413b6f71f0e7",
            "d206a43f1fa69d6c",
            "3e0c6d0caa47f1b9",
            "26324c0ef06ecf68",
            "053aeb576061ecf4",
            "6efc92be7b4d2804",
            "6c15149f6ce90a63"
        ],
        "x": 694,
        "y": 819,
        "w": 752.0001678466797,
        "h": 762
    },
    {
        "id": "199edd429e157ab2",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "Funciones",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "fill-opacity": "0.79",
            "label": true,
            "color": "#92d04f",
            "label-position": "n"
        },
        "nodes": [
            "dfb7a67528cb34ab",
            "1ed67c8049a5a438",
            "bc0cd50185f7fc3e",
            "c15a507163d5def0",
            "deb8673797b7aab1",
            "01cdfce1be53b489",
            "2252898579342911",
            "b941bbdec5600bd7",
            "58301fa2167ad81b",
            "6b422b8c41cb8518",
            "c781738c5bfcc9e6",
            "b3dc7f7fb14d5f6a",
            "74e2a516dd80be2a",
            "13b1df249d8e9a0b",
            "d8380a390d98abdb",
            "19c9e0e2ff1168bd",
            "5e0ed78125d9cdf1",
            "dcec36c5b74414fc",
            "7e86d8713546bc63",
            "17477172fa2f41d9",
            "38ab872150fcb66d",
            "0bda94f7649f81d8",
            "338d7522ed0a883f",
            "e94bb799f916a36e",
            "bfc29ae99e824ee4",
            "705c2528301a93fb",
            "31363c6c5b0b3d2f",
            "a002e77dcc17cf90",
            "1981e80a7544aee0",
            "dd4fb7090ab620d2",
            "f2afeb3c17d44551",
            "57d2d0bd1c61738c",
            "09615a1059ebbcb6",
            "5f136c5c926de5be",
            "bbb0588ae99f1d71",
            "ce4a703c2fb28c97",
            "129cf70c94fcd567",
            "6d80df1c376720eb",
            "5aa6a2613359934c",
            "e517711350a15080",
            "7dfbc2e85c2a023e",
            "0109c27fd78a8e2b",
            "ba163c6e9c08ebca",
            "2a6dc4de36adf62d",
            "248e06f166baeb49"
        ],
        "x": 694,
        "y": 399,
        "w": 1092,
        "h": 402
    },
    {
        "id": "da5b6773961cd50f",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "Login - Registro",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "fill-opacity": "0.58",
            "label": true,
            "label-position": "n",
            "color": "#ff3f3f"
        },
        "nodes": [
            "e3b86d71dced2303",
            "d861cc81cbdd0afa",
            "53f60ecd5f56f7a8",
            "fc39b8ae4617aca8",
            "3b34b9dc8547882e",
            "3db49040ae012953",
            "8a6b828bf61e9282",
            "2a6e25841875d07f",
            "9f17f216a65b7682",
            "c3ef37372439401f",
            "3a34aa023feef5b6",
            "47f2715aedda2f3a"
        ],
        "x": 1474,
        "y": 819,
        "w": 1272,
        "h": 202
    },
    {
        "id": "3ab7cd7a9b0dcd92",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "Registro de huella y rfid",
        "style": {
            "stroke": "#0070c0",
            "fill": "#7fb7df",
            "fill-opacity": "0.59",
            "label": true,
            "color": "#777777",
            "label-position": "n"
        },
        "nodes": [
            "1119b1a5145d05eb",
            "b7785ee9e1967d51",
            "d0856ebbb0da8bc5",
            "dcecac4d3ed2a8cc",
            "ed3e39bf4dca9a4d",
            "9236a4aa4db7a706",
            "ea1d2d300b98ec11",
            "11826e046e4a4e68",
            "6b9cf93b9375efa6",
            "4f1fa8d1b4922b6b",
            "6dbc2eeb6c9fbc61",
            "e69f3f152bc2a22c"
        ],
        "x": 1474,
        "y": 1039,
        "w": 912,
        "h": 202
    },
    {
        "id": "3caf614917293ad3",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "asignar un usuario a una clase",
        "style": {
            "label": true,
            "stroke": "#ff0000",
            "color": "#ff7f7f",
            "fill": "#ffbfbf"
        },
        "nodes": [
            "597adc94c6ec5363",
            "d063961932a825a4",
            "4fab4d070e2fe0bc",
            "b3d083250e190187",
            "efaa9c14056bec4f",
            "d12b2ff6f2b6187d",
            "ea1d9a0b7eabdfe9",
            "117ea5d6d88600ec",
            "bc170795aef32161",
            "3f06dc485fd5b5f8",
            "46ec88d7909bbd42",
            "1b52e5c9866f4a50",
            "a16c0d805d8adaf3"
        ],
        "x": 694,
        "y": 1639,
        "w": 1612,
        "h": 142
    },
    {
        "id": "e057e6a5e41fb417",
        "type": "group",
        "z": "ffe91d66cf0eac12",
        "name": "Comunicación entre fisico - digital",
        "style": {
            "stroke": "#3f3f3f",
            "fill": "#bfbfbf",
            "fill-opacity": "0.65",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "c8437c02241f3521",
            "dd7bf825610fc7ed",
            "e190c629b9d6ae61",
            "d0ca546e69d643cd",
            "332911bad12ad5bb",
            "58ad0f66fff0d5b3",
            "74cf72363b4c635f",
            "bf47f72b168f89d1",
            "9051a259c0cdbdeb",
            "f20b68a74994fe58",
            "0482555aef22b378",
            "7ca5f24b5662dee6",
            "2391539427e997e9",
            "90f6df06e557b07a",
            "f4d2cd1cae3e71ca",
            "2a41684526b71ff2",
            "203c53a8a3898ce8",
            "1f74cc19725e4c9a",
            "d35ca6812b4f33e3",
            "778b825a5346707c",
            "a3af976e01a372cf",
            "c23b09b5fed36626",
            "87397ef39589ea70"
        ],
        "x": 1474,
        "y": 1259,
        "w": 1292,
        "h": 362
    },
    {
        "id": "dfb7a67528cb34ab",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/asistencia/clase/:id_clase/:fecha_inicio/:fecha_fin",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 920,
        "y": 520,
        "wires": [
            [
                "38ab872150fcb66d"
            ]
        ]
    },
    {
        "id": "1ed67c8049a5a438",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/asistencia/clase-dia/:id_clase/:fecha",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 880,
        "y": 560,
        "wires": [
            [
                "0bda94f7649f81d8"
            ]
        ]
    },
    {
        "id": "bc0cd50185f7fc3e",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/horarios/dia/:dia_semana",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "338d7522ed0a883f"
            ]
        ]
    },
    {
        "id": "c15a507163d5def0",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/asistencia/alumno/:id_usuario/:fecha",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 880,
        "y": 480,
        "wires": [
            [
                "17477172fa2f41d9"
            ]
        ]
    },
    {
        "id": "deb8673797b7aab1",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/asistencia/registrar",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 440,
        "wires": [
            [
                "7e86d8713546bc63"
            ]
        ]
    },
    {
        "id": "01cdfce1be53b489",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/usuarios/rfid/:rfid",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 820,
        "y": 680,
        "wires": [
            [
                "bfc29ae99e824ee4"
            ]
        ]
    },
    {
        "id": "2252898579342911",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/usuarios/codigo/:id_usuario",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 850,
        "y": 720,
        "wires": [
            [
                "705c2528301a93fb"
            ]
        ]
    },
    {
        "id": "b941bbdec5600bd7",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/clases/profesores/:id_clase",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 850,
        "y": 760,
        "wires": [
            [
                "31363c6c5b0b3d2f"
            ]
        ]
    },
    {
        "id": "58301fa2167ad81b",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "url": "/horarios/profesor/:id_profesor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 860,
        "y": 640,
        "wires": [
            [
                "e94bb799f916a36e"
            ]
        ]
    },
    {
        "id": "6b422b8c41cb8518",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT asistencias",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1340,
        "y": 480,
        "wires": [
            [
                "1981e80a7544aee0"
            ]
        ]
    },
    {
        "id": "c781738c5bfcc9e6",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT resumen_clase",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1390,
        "y": 520,
        "wires": [
            [
                "dd4fb7090ab620d2"
            ]
        ]
    },
    {
        "id": "b3dc7f7fb14d5f6a",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT asistencia_dia",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "f2afeb3c17d44551"
            ]
        ]
    },
    {
        "id": "74e2a516dd80be2a",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT horario_dia",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1280,
        "y": 600,
        "wires": [
            [
                "57d2d0bd1c61738c"
            ]
        ]
    },
    {
        "id": "13b1df249d8e9a0b",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "INSERT asistencias",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 440,
        "wires": [
            [
                "a002e77dcc17cf90"
            ]
        ]
    },
    {
        "id": "d8380a390d98abdb",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT horario_profesor",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1270,
        "y": 640,
        "wires": [
            [
                "09615a1059ebbcb6"
            ]
        ]
    },
    {
        "id": "19c9e0e2ff1168bd",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT usuario_rfid",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1200,
        "y": 680,
        "wires": [
            [
                "5f136c5c926de5be"
            ]
        ]
    },
    {
        "id": "5e0ed78125d9cdf1",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT codigo_usuario",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1310,
        "y": 720,
        "wires": [
            [
                "bbb0588ae99f1d71"
            ]
        ]
    },
    {
        "id": "dcec36c5b74414fc",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "SELECT profesor_clase",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1290,
        "y": 760,
        "wires": [
            [
                "ce4a703c2fb28c97"
            ]
        ]
    },
    {
        "id": "7e86d8713546bc63",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 3",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { id_usuario, id_horario, metodo } = msg.payload;\n\n// Validar datos obligatorios\nif (!id_usuario || !id_horario || !metodo) {\n    msg.statusCode = 400;\n    msg.payload = { error: \"Faltan parámetros obligatorios\" };\n    return [null, msg]; // Redirigir al nodo HTTP Response de error\n}\n\n// Construir consulta con parámetros seguros (evitar SQL Injection)\nmsg.query = `\n  INSERT INTO asistencias(id_usuario, id_horario, metodo) \n  VALUES($1, $2, $3)\n`;\nmsg.params = [id_usuario, id_horario, metodo];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 440,
        "wires": [
            [
                "13b1df249d8e9a0b"
            ]
        ]
    },
    {
        "id": "17477172fa2f41d9",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 4",
        "func": "// Extraer parámetros desde la URL ya que msg.params está vacío\nconst url = msg.req.url;\nnode.warn(\"URL completa: \" + JSON.stringify(url));\n\n// Extraer parámetros usando expresión regular\nconst urlParts = url.split('/');\n// La URL tiene formato /asistencia/alumno/[id]/[fecha]\n// Por lo tanto, urlParts sería ['', 'asistencia', 'alumno', id_usuario, fecha]\nconst id_usuario = urlParts.length > 3 ? urlParts[3] : 'all';\nconst fecha = urlParts.length > 4 ? urlParts[4] : 'all';\n\nnode.warn(\"ID Usuario extraído: \" + id_usuario);\nnode.warn(\"Fecha extraída: \" + fecha);\n\n// Construir consulta dinámica\nlet query = `\n    SELECT a.id, a.fecha, a.hora_registro, a.metodo, \n           c.nombre AS clase, h.hora_inicio, h.hora_fin, \n           aul.nombre AS aula, a.id_usuario, a.id_horario \n    FROM asistencias a \n    JOIN horarios h ON a.id_horario = h.id \n    JOIN clases c ON h.id_clase = c.id \n    JOIN aulas aul ON h.id_aula = aul.id \n`;\n\n// Array para parámetros seguros\nconst queryParams = [];\nlet whereAdded = false;\n\n// Agregar condición WHERE solo si hay filtros\nif (id_usuario !== 'all' || fecha !== 'all') {\n    query += \" WHERE \";\n\n    if (id_usuario !== 'all') {\n        query += `a.id_usuario = $${queryParams.length + 1}`;\n        // Intentar convertir a número si es posible\n        queryParams.push(isNaN(parseInt(id_usuario)) ? id_usuario : parseInt(id_usuario));\n        whereAdded = true;\n    }\n\n    if (fecha !== 'all') {\n        if (whereAdded) {\n            query += \" AND \";\n        }\n        query += `a.fecha::date = $${queryParams.length + 1}::date`;\n        queryParams.push(fecha);\n    }\n}\n\n// Para debugging\nnode.warn(\"Query construida: \" + query);\nnode.warn(\"Params: \" + JSON.stringify(queryParams));\n\n// Asignar valores al mensaje\nmsg.query = query;\nmsg.params = queryParams;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 480,
        "wires": [
            [
                "6b422b8c41cb8518"
            ]
        ]
    },
    {
        "id": "38ab872150fcb66d",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 5",
        "func": "const { id_clase, fecha_inicio, fecha_fin } = msg.params;\n\n// Validar fechas\nif (!fecha_inicio || !fecha_fin) {\n    msg.statusCode = 400;\n    msg.payload = { error: \"Fechas requeridas\" };\n    return [null, msg];\n}\n\nmsg.query = `\n  SELECT u.nombre, u.apellido, COUNT(a.id) AS total_asistencias \n  FROM asistencias a \n  JOIN usuarios u ON a.id_usuario = u.id \n  JOIN horarios h ON a.id_horario = h.id \n  WHERE h.id_clase = $1 AND a.fecha BETWEEN $2 AND $3 \n  GROUP BY u.nombre, u.apellido\n`;\nmsg.params = [id_clase, fecha_inicio, fecha_fin];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 520,
        "wires": [
            [
                "c781738c5bfcc9e6"
            ]
        ]
    },
    {
        "id": "0bda94f7649f81d8",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 6",
        "func": "const id_clase = msg.params.id_clase;\nconst fecha = msg.params.fecha;\nconst query = {\n    text: `\n        SELECT u.nombre, u.apellido, a.metodo, a.hora_registro\n        FROM asistencias a\n        JOIN usuarios u ON a.id_usuario = u.id\n        JOIN horarios h ON a.id_horario = h.id\n        WHERE h.id_clase = $1\n        AND a.fecha = $2\n    `,\n    values: [id_clase, fecha]\n};\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 560,
        "wires": [
            [
                "b3dc7f7fb14d5f6a"
            ]
        ]
    },
    {
        "id": "338d7522ed0a883f",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 7",
        "func": "const { dia_semana } = msg.params;\n\n// Validar día válido (Lunes a Sábado)\nconst diasValidos = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\nif (!diasValidos.includes(dia_semana)) {\n    msg.statusCode = 400;\n    msg.payload = { error: \"Día inválido\" };\n    return [null, msg];\n}\n\nmsg.query = `\n  SELECT h.id, c.nombre AS clase, aul.nombre AS aula, \n         h.hora_inicio, h.hora_fin \n  FROM horarios h \n  JOIN clases c ON h.id_clase = c.id \n  JOIN aulas aul ON h.id_aula = aul.id \n  WHERE h.dia_semana = $1\n`;\nmsg.params = [dia_semana];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 600,
        "wires": [
            [
                "74e2a516dd80be2a"
            ]
        ]
    },
    {
        "id": "e94bb799f916a36e",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 8",
        "func": "const id_profesor = msg.params.id_profesor;\nconst query = {\n    text: `\n        SELECT h.id, c.nombre AS clase, aul.nombre AS aula, h.dia_semana, h.hora_inicio, h.hora_fin\n        FROM clase_profesor cp\n        JOIN clases c ON cp.id_clase = c.id\n        JOIN horarios h ON c.id = h.id_clase\n        JOIN aulas aul ON h.id_aula = aul.id\n        WHERE cp.id_profesor = $1\n    `,\n    values: [id_profesor]\n};\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 640,
        "wires": [
            [
                "d8380a390d98abdb"
            ]
        ]
    },
    {
        "id": "bfc29ae99e824ee4",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 9",
        "func": "const { rfid } = msg.params;\n\n// Validar que el RFID no esté vacío\nif (!rfid) {\n    msg.statusCode = 400;\n    msg.payload = { error: \"RFID requerido\" };\n    return [null, msg];\n}\n\nmsg.query = \"SELECT * FROM usuarios WHERE rfid = $1\";\nmsg.params = [rfid];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 680,
        "wires": [
            [
                "19c9e0e2ff1168bd"
            ]
        ]
    },
    {
        "id": "705c2528301a93fb",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 10",
        "func": "const id_usuario = msg.params.id_usuario;\nconst query = {\n    text: `\n        SELECT codigo\n        FROM usuarios\n        WHERE id = $1\n    `,\n    values: [id_usuario]\n};\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 720,
        "wires": [
            [
                "5e0ed78125d9cdf1"
            ]
        ]
    },
    {
        "id": "31363c6c5b0b3d2f",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "function 11",
        "func": "const id_clase = msg.params.id_clase;\nconst query = {\n    text: `\n        SELECT u.id, u.nombre, u.apellido\n        FROM clase_profesor cp\n        JOIN usuarios u ON cp.id_profesor = u.id\n        WHERE cp.id_clase = $1\n    `,\n    values: [id_clase]\n};\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 760,
        "wires": [
            [
                "dcec36c5b74414fc"
            ]
        ]
    },
    {
        "id": "a002e77dcc17cf90",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1430,
        "y": 440,
        "wires": [
            [
                "129cf70c94fcd567"
            ]
        ]
    },
    {
        "id": "1981e80a7544aee0",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1510,
        "y": 480,
        "wires": [
            [
                "6d80df1c376720eb"
            ]
        ]
    },
    {
        "id": "dd4fb7090ab620d2",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 520,
        "wires": [
            [
                "e517711350a15080"
            ]
        ]
    },
    {
        "id": "f2afeb3c17d44551",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 560,
        "wires": [
            [
                "5aa6a2613359934c"
            ]
        ]
    },
    {
        "id": "57d2d0bd1c61738c",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1470,
        "y": 600,
        "wires": [
            [
                "7dfbc2e85c2a023e"
            ]
        ]
    },
    {
        "id": "09615a1059ebbcb6",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1450,
        "y": 640,
        "wires": [
            [
                "0109c27fd78a8e2b"
            ]
        ]
    },
    {
        "id": "5f136c5c926de5be",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 680,
        "wires": [
            [
                "ba163c6e9c08ebca"
            ]
        ]
    },
    {
        "id": "bbb0588ae99f1d71",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1510,
        "y": 720,
        "wires": [
            [
                "2a6dc4de36adf62d"
            ]
        ]
    },
    {
        "id": "ce4a703c2fb28c97",
        "type": "json",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1470,
        "y": 760,
        "wires": [
            [
                "248e06f166baeb49"
            ]
        ]
    },
    {
        "id": "129cf70c94fcd567",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1580,
        "y": 440,
        "wires": []
    },
    {
        "id": "6d80df1c376720eb",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1640,
        "y": 480,
        "wires": []
    },
    {
        "id": "5aa6a2613359934c",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1620,
        "y": 560,
        "wires": []
    },
    {
        "id": "e517711350a15080",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1700,
        "y": 520,
        "wires": []
    },
    {
        "id": "7dfbc2e85c2a023e",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1600,
        "y": 600,
        "wires": []
    },
    {
        "id": "0109c27fd78a8e2b",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1580,
        "y": 640,
        "wires": []
    },
    {
        "id": "ba163c6e9c08ebca",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1520,
        "y": 680,
        "wires": []
    },
    {
        "id": "2a6dc4de36adf62d",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1660,
        "y": 720,
        "wires": []
    },
    {
        "id": "248e06f166baeb49",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "199edd429e157ab2",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1600,
        "y": 760,
        "wires": []
    },
    {
        "id": "8a97b1b4b5ef37a9",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Interfaz Asistencia",
        "url": "/interfaz/asistencia",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1950,
        "y": 480,
        "wires": [
            [
                "08aee3e88fb86e4f"
            ]
        ]
    },
    {
        "id": "08aee3e88fb86e4f",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <title>Sistema de Asistencia</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \n    <!-- Bootstrap 5 for modern UI components -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css\">\n    <!-- Font Awesome for icons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">\n    <!-- Google Font -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/google-fonts/1.0.0/google-fonts.css\">\n    \n    <style>\n        :root {\n            --primary: #4e73df;\n            --secondary: #f8f9fc;\n            --dark: #5a5c69;\n            --success: #1cc88a;\n            --danger: #e74a3b;\n            --warning: #f6c23e;\n            --info: #36b9cc;\n        }\n        \n        body {\n            font-family: 'Nunito', 'Poppins', sans-serif;\n            background-color: var(--secondary);\n            color: var(--dark);\n            padding-top: 56px; /* Espacio para la navbar fija */\n        }\n        \n        .dashboard-header {\n            background-color: white;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n        }\n        \n        .card {\n            border: none;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.10);\n            margin-bottom: 1.5rem;\n        }\n        \n        .card-header {\n            background-color: white;\n            border-bottom: 1px solid #e3e6f0;\n            padding: 1rem 1.25rem;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .btn-primary {\n            background-color: var(--primary);\n            border-color: var(--primary);\n        }\n        \n        .btn-primary:hover {\n            background-color: #2e59d9;\n            border-color: #2653d4;\n        }\n        \n        .btn-success {\n            background-color: var(--success);\n            border-color: var(--success);\n        }\n        \n        .btn-success:hover {\n            background-color: #17a673;\n            border-color: #169b6b;\n        }\n        \n        /* Custom navbar styling */\n        .navbar-custom {\n            background-color: white;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n        }\n        \n        .navbar-custom .navbar-brand {\n            color: var(--primary);\n            font-weight: 700;\n        }\n        \n        .navbar-custom .nav-link {\n            color: var(--dark);\n            font-weight: 600;\n            padding: 0.5rem 1rem;\n            border-radius: 0.25rem;\n            transition: all 0.2s;\n        }\n        \n        .navbar-custom .nav-link:hover,\n        .navbar-custom .nav-link.active {\n            color: var(--primary);\n            background-color: rgba(78, 115, 223, 0.1);\n        }\n        \n        .navbar-custom .navbar-toggler {\n            border-color: var(--primary);\n        }\n        \n        /* Container style */\n        .contenedor-principal {\n            max-width: 1000px;\n            width: 100%;\n            background: white;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.10);\n            padding: 2rem;\n            margin: 2rem auto;\n        }\n        \n        /* Form styling */\n        form {\n            display: grid;\n            gap: 1.5rem;\n            margin-top: 1.5rem;\n        }\n        \n        .form-group {\n            margin-bottom: 1rem;\n        }\n        \n        label {\n            display: block;\n            margin-bottom: 0.5rem;\n            color: var(--dark);\n            font-weight: 600;\n        }\n        \n        input[type=\"text\"] {\n            width: 100%;\n            padding: 0.75rem;\n            border: 1px solid #d1d3e2;\n            border-radius: 0.35rem;\n            transition: all 0.3s ease;\n        }\n        \n        input[type=\"text\"]:focus {\n            outline: none;\n            border-color: var(--primary);\n            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);\n        }\n        \n        button {\n            background-color: var(--primary);\n            color: white;\n            padding: 0.75rem 1.5rem;\n            border: none;\n            border-radius: 0.35rem;\n            cursor: pointer;\n            font-size: 0.9rem;\n            font-weight: 600;\n            transition: all 0.3s ease;\n        }\n        \n        button:hover {\n            background-color: #2e59d9;\n        }\n        \n        /* Results table */\n        #result {\n            margin-top: 2rem;\n            padding: 1rem 0;\n        }\n        \n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 1rem;\n        }\n        \n        th, td {\n            padding: 0.75rem;\n            text-align: left;\n            border-bottom: 1px solid #e3e6f0;\n        }\n        \n        th {\n            background-color: #f8f9fc;\n            color: var(--primary);\n            font-weight: 600;\n        }\n        \n        tr:hover {\n            background-color: #f8f9fc;\n        }\n        \n        tr:nth-child(even) {\n            background-color: #fbfbfd;\n        }\n        \n        .rfid {\n            color: var(--primary);\n            font-weight: 600;\n        }\n        \n        .codigo {\n            color: var(--info);\n            font-weight: 600;\n        }\n        \n        .huella {\n            color: var(--warning);\n            font-weight: 600;\n        }\n        \n        /* Error message */\n        .error {\n            background-color: #f8d7da;\n            color: #842029;\n            border-left: 4px solid var(--danger);\n            padding: 1rem;\n            margin: 1rem 0;\n            border-radius: 0.25rem;\n        }\n        \n        /* Loading indicator */\n        .loading {\n            text-align: center;\n            padding: 1.5rem;\n            color: var(--dark);\n        }\n        \n        .loading i {\n            margin-right: 0.5rem;\n        }\n        \n        /* Responsive adjustments */\n        @media (max-width: 768px) {\n            .contenedor-principal {\n                padding: 1.5rem;\n                margin: 1rem;\n                width: calc(100% - 2rem);\n            }\n            \n            th, td {\n                padding: 0.5rem;\n                font-size: 0.9rem;\n            }\n            \n            table {\n                display: block;\n                overflow-x: auto;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg navbar-custom fixed-top\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <i class=\"fas fa-school me-2\"></i>Sistema Escolar\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\" aria-controls=\"navbarMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/usuarios\">\n                            <i class=\"fas fa-users me-1\"></i>Usuarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/clases\">\n                            <i class=\"fas fa-chalkboard-teacher me-1\"></i>Clases\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/aulas\">\n                            <i class=\"fas fa-door-open me-1\"></i>Aulas\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/horarios\">\n                            <i class=\"fas fa-clock me-1\"></i>Horarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/asistencia\">\n                            <i class=\"fas fa-clipboard-check me-1\"></i>Asistencia\n                        </a>\n                    </li>\n                </ul>\n                <div class=\"d-flex\">\n                    <span class=\"navbar-text me-3\">\n                        <i class=\"fas fa-user-circle me-1\"></i>Admin\n                    </span>\n                </div>\n            </div>\n        </div>\n    </nav>\n\n    <div class=\"container-fluid py-4\">\n        <!-- Header -->\n        <div class=\"dashboard-header mb-4\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h1 class=\"h3 mb-0 text-gray-800\">\n                        <i class=\"fas fa-clipboard-check me-2\"></i>Sistema de Asistencia\n                    </h1>\n                    <p class=\"text-muted small mb-0\">Consulta y administración de registros de asistencia</p>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Main Content -->\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Consulta de Asistencias</h6>\n                <div>\n                    <button class=\"btn btn-sm btn-primary\" id=\"btn-refresh\" onclick=\"limpiarFiltros()\">\n                        <i class=\"fas fa-sync-alt me-1\"></i>Limpiar Filtros\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <form id=\"searchForm\" class=\"row g-3\">\n                    <div class=\"col-md-6\">\n                        <label for=\"id_usuario\" class=\"form-label\">ID Usuario:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"id_usuario\" placeholder=\"Ej: 2\">\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"fecha\" class=\"form-label\">Fecha (YYYY-MM-DD):</label>\n                        <input type=\"text\" class=\"form-control\" id=\"fecha\" placeholder=\"Ej: 2025-03-31\">\n                    </div>\n                    <div class=\"col-12 mt-3\">\n                        <button type=\"button\" class=\"btn btn-success\" onclick=\"buscarAsistencia()\">\n                            <i class=\"fas fa-search me-1\"></i>Buscar Asistencias\n                        </button>\n                    </div>\n                </form>\n                \n                <div id=\"result\" class=\"mt-4\"></div>\n            </div>\n        </div>\n\n        <div class=\"card shadow mb-4\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Información</h6>\n            </div>\n            <div class=\"card-body\">\n                <p>\n                    Utilice este panel para consultar los registros de asistencia en el sistema. Puede filtrar por ID de usuario\n                    y/o fecha específica.\n                </p>\n                <p class=\"mb-0\">\n                    <i class=\"fas fa-info-circle me-1 text-info\"></i>\n                    Si deja los campos vacíos, se mostrarán todos los registros disponibles.\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <!-- Scripts -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js\"></script>\n\n    <script>\n        $(function() {\n            console.log(\"Sistema de Asistencia Iniciado\");\n            \n            // Establecer la navegación activa según la URL actual\n            function setActiveNavItem() {\n                const currentPath = window.location.pathname;\n                $('.navbar-nav .nav-link').removeClass('active');\n                $('.navbar-nav .nav-link').each(function() {\n                    if ($(this).attr('href') === currentPath) {\n                        $(this).addClass('active');\n                    }\n                });\n            }\n            \n            // Llamar a la función para establecer el ítem de navegación activo\n            setActiveNavItem();\n        });\n        \n        // Función para limpiar filtros\n        function limpiarFiltros() {\n            document.getElementById('id_usuario').value = '';\n            document.getElementById('fecha').value = '';\n            document.getElementById('result').innerHTML = '';\n        }\n        \n        // Función principal\n        function buscarAsistencia() {\n            console.log(\"Iniciando búsqueda...\");\n            \n            const resultDiv = document.getElementById('result');\n            const idUsuario = document.getElementById('id_usuario').value.trim();\n            const fecha = document.getElementById('fecha').value.trim();\n\n            // Validar formato de fecha\n            if (fecha && !/^\\d{4}-\\d{2}-\\d{2}$/.test(fecha)) {\n                return showError(\"Formato de fecha inválido (YYYY-MM-DD)\");\n            }\n\n            // Construir URL con parámetros\n            const idParam = idUsuario ? idUsuario : 'all';\n            const fechaParam = fecha ? fecha : 'all';\n            const url = `/asistencia/alumno/${idParam}/${fechaParam}`;\n            console.log(\"URL de solicitud:\", url);\n\n            // Mostrar mensaje de carga\n            resultDiv.innerHTML = `\n                <div class=\"loading\">\n                    <i class=\"fas fa-spinner fa-spin\"></i> Cargando...\n                </div>\n            `;\n\n            // Realizar solicitud HTTP\n            fetch(url)\n                .then(response => {\n                    console.log(\"Response status:\", response.status);\n                    if (!response.ok) throw new Error(\"Error en la solicitud\");\n                    return response.json();\n                })\n                .then(data => {\n                    console.log(\"Datos recibidos:\", data);\n                    if (data.length === 0) {\n                        return showError(\"No hay registros para estos criterios\");\n                    }\n\n                    // Crear tabla dinámica\n                    let table = `\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Fecha</th>\n                                        <th>Hora Registro</th>\n                                        <th>Método</th>\n                                        <th>Clase</th>\n                                        <th>Aula</th>\n                                        <th>Horario</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                    `;\n\n                    data.forEach(row => {\n                        const metodoClass = row.metodo.toLowerCase();\n                        const horario = `${row.hora_inicio} - ${row.hora_fin}`;\n                        \n                        table += `\n                            <tr>\n                                <td>${row.id}</td>\n                                <td>${row.fecha}</td>\n                                <td>${row.hora_registro}</td>\n                                <td class=\"${metodoClass}\">${row.metodo}</td>\n                                <td>${row.clase || '-'}</td>\n                                <td>${row.aula || '-'}</td>\n                                <td>${horario}</td>\n                            </tr>\n                        `;\n                    });\n\n                    table += `\n                                </tbody>\n                            </table>\n                        </div>\n                        <div class=\"text-end mt-3\">\n                            <span class=\"badge bg-primary\">Total: ${data.length} registros</span>\n                        </div>\n                    `;\n\n                    resultDiv.innerHTML = table;\n                })\n                .catch(error => {\n                    showError(`Error: ${error.message}`);\n                    console.error(error);\n                });\n        }\n\n        // Función para mostrar errores\n        function showError(message) {\n            const resultDiv = document.getElementById('result');\n            resultDiv.innerHTML = `\n                <div class=\"alert alert-danger\" role=\"alert\">\n                    <i class=\"fas fa-exclamation-triangle me-2\"></i>\n                    ${message}\n                </div>\n            `;\n        }\n    </script>\n</body>\n</html>",
        "output": "str",
        "x": 2120,
        "y": 480,
        "wires": [
            [
                "22f961476e471b4f"
            ]
        ]
    },
    {
        "id": "22f961476e471b4f",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2260,
        "y": 480,
        "wires": []
    },
    {
        "id": "2bf28d50fabc0ba5",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Interfaz usuarios",
        "url": "/interfaz/usuarios",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1940,
        "y": 520,
        "wires": [
            [
                "428fcf9604bb40dd"
            ]
        ]
    },
    {
        "id": "428fcf9604bb40dd",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <title>Sistema de Gestión Escolar</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \n    <!-- Bootstrap 5 for modern UI components -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css\">\n    <!-- JSGrid CSS -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\">\n    <!-- Font Awesome for icons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">\n    <!-- Google Font -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/google-fonts/1.0.0/google-fonts.css\">\n    \n    <style>\n        :root {\n            --primary: #4e73df;\n            --secondary: #f8f9fc;\n            --dark: #5a5c69;\n            --success: #1cc88a;\n            --danger: #e74a3b;\n            --warning: #f6c23e;\n            --info: #36b9cc;\n        }\n        \n        body {\n            font-family: 'Nunito', 'Poppins', sans-serif;\n            background-color: var(--secondary);\n            color: var(--dark);\n            padding-top: 56px; /* Espacio para la navbar fija */\n        }\n        \n        .dashboard-header {\n            background-color: white;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n        }\n        \n        .card {\n            border: none;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.10);\n            margin-bottom: 1.5rem;\n        }\n        \n        .card-header {\n            background-color: white;\n            border-bottom: 1px solid #e3e6f0;\n            padding: 1rem 1.25rem;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .btn-primary {\n            background-color: var(--primary);\n            border-color: var(--primary);\n        }\n        \n        .btn-primary:hover {\n            background-color: #2e59d9;\n            border-color: #2653d4;\n        }\n        \n        #jsgrid {\n            width: 100%;\n        }\n        \n        .jsgrid-header-row > th {\n            background-color: #f8f9fc;\n            color: #4e73df;\n            font-weight: 600;\n            border-top: none;\n        }\n        \n        .jsgrid-row, .jsgrid-alt-row {\n            transition: background-color 0.2s;\n        }\n        \n        .jsgrid-row:hover, .jsgrid-alt-row:hover {\n            background-color: #eaecf4;\n        }\n        \n        .jsgrid-cell {\n            padding: 12px !important;\n        }\n        \n        .status-toast {\n            position: fixed;\n            top: 70px;\n            right: 20px;\n            z-index: 1050;\n            min-width: 300px;\n        }\n        \n        .badge {\n            padding: 0.4em 0.65em;\n            font-size: 0.75em;\n        }\n        \n        .badge-alumno {\n            background-color: var(--info);\n            color: white;\n        }\n        \n        .badge-profesor {\n            background-color: var(--primary);\n            color: white;\n        }\n        \n        /* Custom navbar styling */\n        .navbar-custom {\n            background-color: white;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n        }\n        \n        .navbar-custom .navbar-brand {\n            color: var(--primary);\n            font-weight: 700;\n        }\n        \n        .navbar-custom .nav-link {\n            color: var(--dark);\n            font-weight: 600;\n            padding: 0.5rem 1rem;\n            border-radius: 0.25rem;\n            transition: all 0.2s;\n        }\n        \n        .navbar-custom .nav-link:hover,\n        .navbar-custom .nav-link.active {\n            color: var(--primary);\n            background-color: rgba(78, 115, 223, 0.1);\n        }\n        \n        .navbar-custom .navbar-toggler {\n            border-color: var(--primary);\n        }\n        \n        /* Custom JSGrid styling */\n        .jsgrid-grid-body {\n            font-size: 0.9rem;\n        }\n        \n        .jsgrid-insert-row input, .jsgrid-edit-row input, .jsgrid-filter-row input, .jsgrid-insert-row select, .jsgrid-edit-row select {\n            border: 1px solid #d1d3e2;\n            border-radius: 0.35rem;\n            padding: 0.375rem 0.75rem;\n            font-size: 0.9rem;\n        }\n        \n        /* Responsive adjustments */\n        @media (max-width: 992px) {\n            .jsgrid-grid-header, .jsgrid-grid-body {\n                overflow-x: auto;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg navbar-custom fixed-top\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <i class=\"fas fa-school me-2\"></i>Sistema Escolar\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\" aria-controls=\"navbarMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" href=\"/interfaz/usuarios\">\n                            <i class=\"fas fa-users me-1\"></i>Usuarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/clases\">\n                            <i class=\"fas fa-chalkboard-teacher me-1\"></i>Clases\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/aulas\">\n                            <i class=\"fas fa-door-open me-1\"></i>Aulas\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/horarios\">\n                            <i class=\"fas fa-clock me-1\"></i>Horarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/asistencia\">\n                            <i class=\"fas fa-clipboard-check me-1\"></i>Asistencia\n                        </a>\n                    </li>\n                </ul>\n                <div class=\"d-flex\">\n                    <span class=\"navbar-text me-3\">\n                        <i class=\"fas fa-user-circle me-1\"></i>Admin\n                    </span>\n                </div>\n            </div>\n        </div>\n    </nav>\n\n    <div class=\"container-fluid py-4 px-4\">\n        <!-- Header -->\n        <div class=\"dashboard-header mb-4\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h1 class=\"h3 mb-0 text-gray-800\">\n                        <i class=\"fas fa-users me-2\"></i>Gestión de Usuarios\n                    </h1>\n                    <p class=\"text-muted small mb-0\">Sistema de administración de usuarios</p>\n                </div>\n                <div class=\"col-auto\">\n                    <button class=\"btn btn-primary btn-sm\" id=\"btn-refresh\">\n                        <i class=\"fas fa-sync-alt me-1\"></i>Actualizar\n                    </button>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Status Toast -->\n        <div class=\"toast status-toast align-items-center text-white bg-primary border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" id=\"status-toast\">\n            <div class=\"d-flex\">\n                <div class=\"toast-body\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    <span id=\"status-message\">Mensaje de estado</span>\n                </div>\n                <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n            </div>\n        </div>\n        \n        <!-- Main Content -->\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Lista de Usuarios</h6>\n                <div>\n                    <button class=\"btn btn-sm btn-success\" id=\"btn-add\">\n                        <i class=\"fas fa-plus me-1\"></i>Nuevo Usuario\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <div id=\"jsgrid\"></div>\n            </div>\n        </div>\n\n        <div class=\"card shadow mb-4\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Información</h6>\n            </div>\n            <div class=\"card-body\">\n                <p>\n                    Utilice este panel para administrar los usuarios disponibles en el sistema. Puede agregar nuevos usuarios,\n                    editar los existentes o eliminarlos.\n                </p>\n                <p class=\"mb-0\">\n                    <i class=\"fas fa-info-circle me-1 text-info\"></i>\n                    Recuerde que al eliminar un usuario, se eliminarán también todas las relaciones asociadas a él.\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <!-- Scripts -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script>\n        $(function () {\n            console.log(\"CRUD Usuarios Iniciado\");\n            \n            // Establecer la navegación activa según la URL actual\n            function setActiveNavItem() {\n                const currentPath = window.location.pathname;\n                $('.navbar-nav .nav-link').removeClass('active');\n                $('.navbar-nav .nav-link').each(function() {\n                    if ($(this).attr('href') === currentPath) {\n                        $(this).addClass('active');\n                    }\n                });\n            }\n            \n            // Llamar a la función para establecer el ítem de navegación activo\n            setActiveNavItem();\n            \n            // Toast para mensajes de estado\n            const statusToast = new bootstrap.Toast(document.getElementById('status-toast'), {\n                delay: 3000,\n                autohide: true\n            });\n            \n            var db = [];\n            \n            // Mostrar mensajes de estado con toast\n            function showStatus(message, type = \"primary\") {\n                const toast = $(\"#status-toast\");\n                toast.removeClass().addClass(`toast status-toast align-items-center text-white bg-${type} border-0`);\n                $(\"#status-message\").text(message);\n                statusToast.show();\n                console.log(message);\n            }\n            \n            // Función para cargar los usuarios\n            function loadUsers() {\n                showStatus(\"Cargando usuarios...\", \"info\");\n                \n                $.get(\"/usuarios/get-all\", function(data) {\n                    if (data && data.length > 0) {\n                        db = data;\n                        $(\"#jsgrid\").jsGrid(\"loadData\");\n                        showStatus(`${data.length} usuarios cargados correctamente`, \"success\");\n                    } else {\n                        showStatus(\"No se encontraron usuarios en el sistema\", \"warning\");\n                    }\n                }).fail(function(error) {\n                    showStatus(\"Error al cargar usuarios: \" + error.statusText, \"danger\");\n                });\n            }\n            \n            // Inicializar JSGrid\n            $(\"#jsgrid\").jsGrid({\n                width: \"100%\",\n                height: \"auto\",\n                \n                inserting: false,\n                editing: true,\n                sorting: true,\n                paging: true,\n                pageSize: 10,\n                pageButtonCount: 5,\n                \n                noDataContent: \"No hay usuarios registrados\",\n                confirmDeleting: true,\n                deleteConfirm: \"¿Está seguro de eliminar este usuario?\",\n                \n                data: db,\n                \n                fields: [\n                    { title: \"ID\", name: \"id\", type: \"text\", width: 50, readOnly: true, align: \"center\" },\n                    { title: \"Nombre\", name: \"nombre\", type: \"text\", width: 120, validate: \"required\" },\n                    { title: \"Apellido\", name: \"apellido\", type: \"text\", width: 120, validate: \"required\" },\n                    { \n                        title: \"Tipo\", \n                        name: \"tipo_usuario\", \n                        type: \"select\", \n                        items: [\n                            { Name: \"Alumno\", Id: \"Alumno\" }, \n                            { Name: \"Profesor\", Id: \"Profesor\" }\n                        ], \n                        valueField: \"Id\", \n                        textField: \"Name\", \n                        width: 80,\n                        validate: \"required\",\n                        itemTemplate: function(value) {\n                            return $(\"<span>\")\n                                .addClass(\"badge\")\n                                .addClass(value === \"Alumno\" ? \"badge-alumno\" : \"badge-profesor\")\n                                .text(value);\n                        }\n                    },\n                    { title: \"RFID\", name: \"rfid\", type: \"text\", width: 120 },\n                    { title: \"Huella\", name: \"huella\", type: \"text\", width: 80 },\n                    { title: \"Código\", name: \"codigo\", type: \"text\", width: 100 },\n                    { \n                        type: \"control\", \n                        editButton: true,\n                        deleteButton: true,\n                        clearFilterButton: true,\n                        modeSwitchButton: true,\n                        width: 80 \n                    }\n                ],\n                \n                controller: {\n                    loadData: function() {\n                        return db;\n                    },\n                    insertItem: function(item) {\n                        showStatus(\"Insertando usuario...\", \"info\");\n                        return $.ajax({\n                            type: \"POST\",\n                            url: \"/usuarios/insert\",\n                            data: item,\n                            dataType: \"json\"\n                        })\n                        .done(function(response) {\n                            showStatus(\"Usuario insertado correctamente\", \"success\");\n                            loadUsers();\n                        })\n                        .fail(function(error) {\n                            showStatus(\"Error al insertar usuario: \" + error.statusText, \"danger\");\n                        });\n                    },\n                    updateItem: function(item) {\n                        showStatus(\"Actualizando usuario...\", \"info\");\n                        return $.ajax({\n                            type: \"PUT\",\n                            url: \"/usuarios/update\",\n                            data: item,\n                            dataType: \"json\"\n                        })\n                        .done(function(response) {\n                            showStatus(\"Usuario actualizado correctamente\", \"success\");\n                            loadUsers();\n                        })\n                        .fail(function(error) {\n                            showStatus(\"Error al actualizar usuario: \" + error.statusText, \"danger\");\n                        });\n                    },\n                    deleteItem: function(item) {\n                        showStatus(\"Eliminando usuario...\", \"info\");\n                        return $.ajax({\n                            type: \"DELETE\",\n                            url: \"/usuarios/delete\",\n                            data: item,\n                            dataType: \"json\"\n                        })\n                        .done(function(response) {\n                            showStatus(\"Usuario eliminado correctamente\", \"success\");\n                            loadUsers();\n                        })\n                        .fail(function(error) {\n                            showStatus(\"Error al eliminar usuario: \" + error.statusText, \"danger\");\n                        });\n                    }\n                },\n                \n                onError: function(args) {\n                    showStatus(\"Error en la operación: \" + args.args[0], \"danger\");\n                }\n            });\n            \n            // Botón para añadir nuevo usuario\n            $(\"#btn-add\").on(\"click\", function() {\n                $(\"#jsgrid\").jsGrid(\"option\", \"inserting\", true);\n                setTimeout(function() {\n                    $(\".jsgrid-insert-row\").find(\"input:first\").focus();\n                }, 100);\n            });\n            \n            // Botón para refrescar datos\n            $(\"#btn-refresh\").on(\"click\", function() {\n                loadUsers();\n            });\n            \n            // Cargar usuarios al iniciar\n            loadUsers();\n        });\n    </script>\n</body>\n</html>",
        "output": "str",
        "x": 2120,
        "y": 520,
        "wires": [
            [
                "70e413862964023d"
            ]
        ]
    },
    {
        "id": "70e413862964023d",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2260,
        "y": 520,
        "wires": []
    },
    {
        "id": "e9921588a4c8af2a",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Interfaz clases",
        "url": "/interfaz/clases",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1930,
        "y": 560,
        "wires": [
            [
                "6590fee38e0d39ec"
            ]
        ]
    },
    {
        "id": "6590fee38e0d39ec",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <title>Gestión de Clases</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \n    <!-- Bootstrap 5 for modern UI components -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css\">\n    <!-- JSGrid CSS -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\">\n    <!-- Font Awesome for icons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">\n    <!-- Google Font -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/google-fonts/1.0.0/google-fonts.css\">\n    \n    <style>\n        :root {\n            --primary: #4e73df;\n            --secondary: #f8f9fc;\n            --dark: #5a5c69;\n            --success: #1cc88a;\n            --danger: #e74a3b;\n            --warning: #f6c23e;\n            --info: #36b9cc;\n        }\n        \n        body {\n            font-family: 'Nunito', 'Poppins', sans-serif;\n            background-color: var(--secondary);\n            color: var(--dark);\n            padding-top: 56px;\n        }\n        \n        .dashboard-header {\n            background-color: white;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n        }\n        \n        .card {\n            border: none;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.10);\n            margin-bottom: 1.5rem;\n        }\n        \n        .card-header {\n            background-color: white;\n            border-bottom: 1px solid #e3e6f0;\n            padding: 1rem 1.25rem;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .btn-primary {\n            background-color: var(--primary);\n            border-color: var(--primary);\n        }\n        \n        .btn-primary:hover {\n            background-color: #2e59d9;\n            border-color: #2653d4;\n        }\n        \n        #jsgrid {\n            width: 100%;\n            border: none;\n        }\n        \n        .jsgrid-header-row > th {\n            background-color: #f8f9fc;\n            color: #4e73df;\n            font-weight: 600;\n            border-top: none;\n        }\n        \n        .jsgrid-row, .jsgrid-alt-row {\n            transition: background-color 0.2s;\n        }\n        \n        .jsgrid-row:hover, .jsgrid-alt-row:hover {\n            background-color: #eaecf4;\n        }\n        \n        .jsgrid-cell {\n            padding: 12px !important;\n        }\n        \n        .status-toast {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1050;\n            min-width: 300px;\n        }\n        \n        /* Custom JSGrid styling */\n        .jsgrid-grid-body {\n            font-size: 0.9rem;\n        }\n        \n        .jsgrid-insert-row input, .jsgrid-edit-row input, .jsgrid-filter-row input, .jsgrid-insert-row select, .jsgrid-edit-row select {\n            border: 1px solid #d1d3e2;\n            border-radius: 0.35rem;\n            padding: 0.375rem 0.75rem;\n            font-size: 0.9rem;\n            width: 100%;\n        }\n        \n        .jsgrid-button {\n            cursor: pointer;\n        }\n        \n        .jsgrid-delete-button:hover {\n            color: var(--danger);\n        }\n        \n        .jsgrid-edit-button:hover {\n            color: var(--primary);\n        }\n        \n        /* Empty data message */\n        .jsgrid-nodata-row td {\n            padding: 2rem;\n            text-align: center;\n            color: #858796;\n            font-style: italic;\n        }\n        \n        /* Stats cards */\n        .stat-card {\n            border-left: 4px solid var(--primary);\n            border-radius: 0.35rem;\n        }\n        \n        .stat-card-primary {\n            border-left-color: var(--primary);\n        }\n        \n        .stat-card-success {\n            border-left-color: var(--success);\n        }\n        \n        /* Responsive adjustments */\n        @media (max-width: 992px) {\n            .jsgrid-grid-header, .jsgrid-grid-body {\n                overflow-x: auto;\n            }\n        }\n\n        /* Custom navbar styling */\n        .navbar-custom {\n        background-color: white;\n        box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n        }\n        \n        .navbar-custom .navbar-brand {\n        color: var(--primary);\n        font-weight: 700;\n        }\n        \n        .navbar-custom .nav-link {\n        color: var(--dark);\n        font-weight: 600;\n        padding: 0.5rem 1rem;\n        border-radius: 0.25rem;\n        transition: all 0.2s;\n        }\n        \n        .navbar-custom .nav-link:hover,\n        .navbar-custom .nav-link.active {\n        color: var(--primary);\n        background-color: rgba(78, 115, 223, 0.1);\n        }\n        \n        .navbar-custom .navbar-toggler {\n        border-color: var(--primary);\n        }\n    </style>\n</head>\n<body>\n\n    <!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg navbar-custom fixed-top\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <i class=\"fas fa-school me-2\"></i>Sistema Escolar\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\" aria-controls=\"navbarMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" href=\"/interfaz/usuarios\">\n                            <i class=\"fas fa-users me-1\"></i>Usuarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/clases\">\n                            <i class=\"fas fa-chalkboard-teacher me-1\"></i>Clases\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/aulas\">\n                            <i class=\"fas fa-door-open me-1\"></i>Aulas\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/horarios\">\n                            <i class=\"fas fa-clock me-1\"></i>Horarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/asistencia\">\n                            <i class=\"fas fa-clipboard-check me-1\"></i>Asistencia\n                        </a>\n                    </li>\n                </ul>\n                <div class=\"d-flex\">\n                    <span class=\"navbar-text me-3\">\n                            <i class=\"fas fa-user-circle me-1\"></i>Admin\n                        </span>\n                </div>\n            </div>\n        </div>\n    </nav>\n    <div class=\"container-fluid py-4 px-4\">\n        <!-- Header -->\n        <div class=\"dashboard-header mb-4\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h1 class=\"h3 mb-0 text-gray-800\">\n                        <i class=\"fas fa-chalkboard me-2\"></i>Gestión de Clases\n                    </h1>\n                    <p class=\"text-muted small mb-0\">Sistema de administración de clases y cursos</p>\n                </div>\n                <div class=\"col-auto\">\n                    <button class=\"btn btn-primary btn-sm\" id=\"btn-refresh\">\n                        <i class=\"fas fa-sync-alt me-1\"></i>Actualizar\n                    </button>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Status Toast -->\n        <div class=\"toast status-toast align-items-center text-white bg-primary border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" id=\"status-toast\">\n            <div class=\"d-flex\">\n                <div class=\"toast-body\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    <span id=\"status-message\">Mensaje de estado</span>\n                </div>\n                <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n            </div>\n        </div>\n        \n        <!-- Stats Row -->\n        <div class=\"row mb-4\">\n            <div class=\"col-xl-3 col-md-6\">\n                <div class=\"card stat-card stat-card-primary h-100 py-2\">\n                    <div class=\"card-body\">\n                        <div class=\"row align-items-center\">\n                            <div class=\"col\">\n                                <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Total Clases</div>\n                                <div class=\"h5 mb-0 font-weight-bold text-gray-800\" id=\"total-classes\">0</div>\n                            </div>\n                            <div class=\"col-auto\">\n                                <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n        \n        <!-- Main Content -->\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Lista de Clases</h6>\n                <div>\n                    <button class=\"btn btn-sm btn-success\" id=\"btn-add\">\n                        <i class=\"fas fa-plus me-1\"></i>Nueva Clase\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <div id=\"jsgrid\"></div>\n            </div>\n        </div>\n\n        <div class=\"card shadow mb-4\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Información</h6>\n            </div>\n            <div class=\"card-body\">\n                <p>\n                    Utilice este panel para administrar las clases disponibles en el sistema. Puede agregar nuevas clases,\n                    editar las existentes o eliminarlas si ya no están disponibles.\n                </p>\n                <p class=\"mb-0\">\n                    <i class=\"fas fa-info-circle me-1 text-info\"></i>\n                    Recuerde que al eliminar una clase, se eliminarán también todas las relaciones asociadas a ella.\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <!-- Scripts -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script>\n        $(function () {\n            console.log(\"CRUD Clases Iniciado\");\n            \n            // Establecer la navegación activa según la URL actual\n            function setActiveNavItem() {\n                const currentPath = window.location.pathname;\n                $('.navbar-nav .nav-link').removeClass('active');\n                $('.navbar-nav .nav-link').each(function() {\n                    if ($(this).attr('href') === currentPath) {\n                        $(this).addClass('active');\n                    }\n                });\n            }\n            \n            // Llamar a la función para establecer el ítem de navegación activo\n            setActiveNavItem();\n            \n            // Toast para mensajes de estado\n            const statusToast = new bootstrap.Toast(document.getElementById('status-toast'), {\n                delay: 3000,\n                autohide: true\n            });\n            \n            var db = [];\n            var lastUpdate = \"--\";\n            \n            // Mostrar mensajes de estado con toast\n            function showStatus(message, type = \"primary\") {\n                const toast = $(\"#status-toast\");\n                toast.removeClass().addClass(`toast status-toast align-items-center text-white bg-${type} border-0`);\n                $(\"#status-message\").text(message);\n                statusToast.show();\n                console.log(message);\n            }\n            \n            // Actualizar estadísticas\n            function updateStats() {\n                $(\"#total-classes\").text(db.length);\n                lastUpdate = new Date().toLocaleTimeString();\n                $(\"#last-update\").text(lastUpdate);\n            }\n            \n            // Función para cargar las clases\n            function loadClasses() {\n                showStatus(\"Cargando clases...\", \"info\");\n                \n                return $.get(\"/clases/get-all\", function(data) {\n                    if (data && Array.isArray(data)) {\n                        db = data;\n                        $(\"#jsgrid\").jsGrid(\"loadData\");\n                        updateStats();\n                        showStatus(`${data.length} clases cargadas correctamente`, \"success\");\n                    } else {\n                        showStatus(\"No se encontraron clases o formato de datos incorrecto\", \"warning\");\n                    }\n                }).fail(function(error) {\n                    showStatus(\"Error al cargar clases: \" + error.statusText, \"danger\");\n                });\n            }\n            \n            // Inicializar JSGrid\n            $(\"#jsgrid\").jsGrid({\n                width: \"100%\",\n                height: \"auto\",\n                \n                inserting: false,\n                editing: true,\n                sorting: true,\n                paging: true,\n                pageSize: 10,\n                pageButtonCount: 5,\n                \n                noDataContent: \"No hay clases registradas\",\n                confirmDeleting: true,\n                deleteConfirm: \"¿Está seguro de eliminar esta clase?\",\n                \n                data: db,\n                \n                fields: [\n                    { \n                        title: \"ID\", \n                        name: \"id\", \n                        type: \"text\", \n                        width: 50, \n                        readOnly: true, \n                        editing: false, \n                        inserting: false,\n                        align: \"center\",\n                        css: \"font-weight-bold\"\n                    },\n                    { \n                        title: \"Nombre de la Clase\", \n                        name: \"nombre\", \n                        type: \"text\", \n                        width: 250,\n                        validate: {\n                            validator: function(value) {\n                                return value.length > 0 && value.length <= 100;\n                            },\n                            message: \"El nombre debe tener entre 1 y 100 caracteres\"\n                        }\n                    },\n                    { \n                        type: \"control\",\n                        editButton: true,\n                        deleteButton: true,\n                        clearFilterButton: true,\n                        modeSwitchButton: true,\n                        width: 100\n                    }\n                ],\n                \n                controller: {\n                    loadData: function() {\n                        return db;\n                    },\n                    insertItem: function(item) {\n                        showStatus(\"Insertando clase...\", \"info\");\n                        return $.ajax({\n                            type: \"POST\",\n                            url: \"/clases/insert\",\n                            data: item,\n                            dataType: \"json\"\n                        })\n                        .done(function(response) {\n                            showStatus(\"Clase agregada correctamente\", \"success\");\n                            loadClasses();\n                        })\n                        .fail(function(error) {\n                            showStatus(\"Error al insertar clase: \" + error.statusText, \"danger\");\n                        });\n                    },\n                    updateItem: function(item) {\n                        showStatus(\"Actualizando clase...\", \"info\");\n                        return $.ajax({\n                            type: \"PUT\",\n                            url: \"/clases/update\",\n                            data: item,\n                            dataType: \"json\"\n                        })\n                        .done(function(response) {\n                            showStatus(\"Clase actualizada correctamente\", \"success\");\n                            loadClasses();\n                        })\n                        .fail(function(error) {\n                            showStatus(\"Error al actualizar clase: \" + error.statusText, \"danger\");\n                        });\n                    },\n                    deleteItem: function(item) {\n                        showStatus(\"Eliminando clase...\", \"info\");\n                        return $.ajax({\n                            type: \"DELETE\",\n                            url: \"/clases/delete\",\n                            data: item,\n                            dataType: \"json\"\n                        })\n                        .done(function(response) {\n                            showStatus(\"Clase eliminada correctamente\", \"success\");\n                            loadClasses();\n                        })\n                        .fail(function(error) {\n                            showStatus(\"Error al eliminar clase: \" + error.statusText, \"danger\");\n                        });\n                    }\n                },\n                \n                onError: function(args) {\n                    showStatus(\"Error en la operación: \" + args.args[0], \"danger\");\n                }\n            });\n            \n            // Botón para añadir nueva clase\n            $(\"#btn-add\").on(\"click\", function() {\n                $(\"#jsgrid\").jsGrid(\"option\", \"inserting\", true);\n                setTimeout(function() {\n                    $(\".jsgrid-insert-row\").find(\"input:first\").focus();\n                }, 100);\n            });\n            \n            // Botón para refrescar datos\n            $(\"#btn-refresh\").on(\"click\", function() {\n                $(this).find(\"i\").addClass(\"fa-spin\");\n                loadClasses().always(function() {\n                    $(\"#btn-refresh\").find(\"i\").removeClass(\"fa-spin\");\n                });\n            });\n            \n            // Cargar clases al iniciar\n            loadClasses();\n        });\n    </script>\n</body>\n</html>",
        "output": "str",
        "x": 2120,
        "y": 560,
        "wires": [
            [
                "42a8d86eb9fc2c1a"
            ]
        ]
    },
    {
        "id": "42a8d86eb9fc2c1a",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2260,
        "y": 560,
        "wires": []
    },
    {
        "id": "2acfb19d94b31d56",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/usuarios/get-all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 860,
        "wires": [
            [
                "6b7996fe0d35c224"
            ]
        ]
    },
    {
        "id": "6b7996fe0d35c224",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 12",
        "func": "// Consulta SQL para obtener todos los usuarios\nmsg.query = `\n    SELECT id, nombre, apellido, tipo_usuario, rfid, huella, codigo\n    FROM usuarios\n`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 860,
        "wires": [
            [
                "e7788388e404096c"
            ]
        ]
    },
    {
        "id": "6a4b38f45a6d1f7a",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/clases/get-all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 900,
        "wires": [
            [
                "aeee0e989b420210"
            ]
        ]
    },
    {
        "id": "e7788388e404096c",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1170,
        "y": 860,
        "wires": [
            [
                "f9f182453a47a1fd"
            ]
        ]
    },
    {
        "id": "f9f182453a47a1fd",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1320,
        "y": 860,
        "wires": []
    },
    {
        "id": "aeee0e989b420210",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "SELECT id, nombre\n    FROM clases",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1170,
        "y": 900,
        "wires": [
            [
                "8037fd13962a2cac"
            ]
        ]
    },
    {
        "id": "8037fd13962a2cac",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1320,
        "y": 900,
        "wires": []
    },
    {
        "id": "9c51cdb856aa0086",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/usuarios/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 840.0001678466797,
        "y": 1038.3334283828735,
        "wires": [
            [
                "0ecf7aff76c49c4f"
            ]
        ]
    },
    {
        "id": "0ecf7aff76c49c4f",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 14",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { nombre, apellido, tipo_usuario, rfid, huella, codigo } = msg.payload;\n\n// Validar campos obligatorios\nif (!nombre || !apellido || !tipo_usuario) {\n    msg.payload = { error: \"Faltan campos obligatorios\" };\n    return msg;\n}\n\n// Validar tipo_usuario\nconst tiposValidos = [\"Alumno\", \"Profesor\"];\nif (!tiposValidos.includes(tipo_usuario)) {\n    msg.payload = { error: \"Tipo de usuario inválido\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    INSERT INTO usuarios(nombre, apellido, tipo_usuario, rfid, huella, codigo)\n    VALUES($1, $2, $3, $4, $5, $6)\n`;\nmsg.params = [nombre, apellido, tipo_usuario, rfid || null, huella || null, codigo || null];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050.0001678466797,
        "y": 1038.3334283828735,
        "wires": [
            [
                "cbb69270c3659e8c"
            ]
        ]
    },
    {
        "id": "cbb69270c3659e8c",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210.0001678466797,
        "y": 1038.3334283828735,
        "wires": [
            [
                "ae6d7ffde7f54c4d"
            ]
        ]
    },
    {
        "id": "ae6d7ffde7f54c4d",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360.0001678466797,
        "y": 1038.3334283828735,
        "wires": []
    },
    {
        "id": "800970495a3d26da",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/usuarios/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 840,
        "y": 1080,
        "wires": [
            [
                "e343d08b38bf589d"
            ]
        ]
    },
    {
        "id": "e343d08b38bf589d",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 15",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { id, nombre, apellido, tipo_usuario, rfid, huella, codigo } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Validar campos obligatorios\nif (!nombre || !apellido || !tipo_usuario) {\n    msg.payload = { error: \"Faltan campos obligatorios\" };\n    return msg;\n}\n\n// Validar tipo_usuario\nconst tiposValidos = [\"Alumno\", \"Profesor\"];\nif (!tiposValidos.includes(tipo_usuario)) {\n    msg.payload = { error: \"Tipo de usuario inválido\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    UPDATE usuarios\n    SET nombre = $1, apellido = $2, tipo_usuario = $3, rfid = $4, huella = $5, codigo = $6\n    WHERE id = $7\n`;\nmsg.params = [nombre, apellido, tipo_usuario, rfid || null, huella || null, codigo || null, id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1080,
        "wires": [
            [
                "1cbf8571de412611"
            ]
        ]
    },
    {
        "id": "1cbf8571de412611",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210,
        "y": 1080,
        "wires": [
            [
                "53494eea20ab5341"
            ]
        ]
    },
    {
        "id": "53494eea20ab5341",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d60201b7eb73d6c5",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/usuarios/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 840,
        "y": 1120,
        "wires": [
            [
                "853ab37bc2c3e9d3"
            ]
        ]
    },
    {
        "id": "853ab37bc2c3e9d3",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 16",
        "func": "// Extraer ID del cuerpo de la solicitud\nconst { id } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    DELETE FROM usuarios\n    WHERE id = $1\n`;\nmsg.params = [id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1120,
        "wires": [
            [
                "31fcf8734d8fc915"
            ]
        ]
    },
    {
        "id": "31fcf8734d8fc915",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210,
        "y": 1120,
        "wires": [
            [
                "18f5df8f2fbf8da8"
            ]
        ]
    },
    {
        "id": "18f5df8f2fbf8da8",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2628282219fae0f6",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/clases/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 1180,
        "wires": [
            [
                "d860361f05755083"
            ]
        ]
    },
    {
        "id": "d860361f05755083",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 17",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { nombre } = msg.payload;\n\n// Validar campos obligatorios\nif (!nombre) {\n    msg.payload = { error: \"El nombre de la clase es obligatorio\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    INSERT INTO clases(nombre)\n    VALUES($1)\n`;\nmsg.params = [nombre];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1180,
        "wires": [
            [
                "138ae49bf1bc17e8"
            ]
        ]
    },
    {
        "id": "138ae49bf1bc17e8",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1190,
        "y": 1180,
        "wires": [
            [
                "271e3cf705fa1f87"
            ]
        ]
    },
    {
        "id": "271e3cf705fa1f87",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a77b5a9154476868",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/clases/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 1220,
        "wires": [
            [
                "e5032edd4184325c"
            ]
        ]
    },
    {
        "id": "e5032edd4184325c",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 18",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { id, nombre } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Validar campos obligatorios\nif (!nombre) {\n    msg.payload = { error: \"El nombre de la clase es obligatorio\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    UPDATE clases\n    SET nombre = $1\n    WHERE id = $2\n`;\nmsg.params = [nombre, id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1220,
        "wires": [
            [
                "097a517e2dc882d2"
            ]
        ]
    },
    {
        "id": "097a517e2dc882d2",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1190,
        "y": 1220,
        "wires": [
            [
                "6a1751ce1cce11c7"
            ]
        ]
    },
    {
        "id": "6a1751ce1cce11c7",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d55eee85fd1d9b38",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/clases/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 820,
        "y": 1260,
        "wires": [
            [
                "46155e98c1c2702d"
            ]
        ]
    },
    {
        "id": "46155e98c1c2702d",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 19",
        "func": "// Extraer ID del cuerpo de la solicitud\nconst { id } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    DELETE FROM clases\n    WHERE id = $1\n`;\nmsg.params = [id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1260,
        "wires": [
            [
                "ddffe9f12d8c295d"
            ]
        ]
    },
    {
        "id": "ddffe9f12d8c295d",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1190,
        "y": 1260,
        "wires": [
            [
                "1f7e010f1bb2aa0f"
            ]
        ]
    },
    {
        "id": "1f7e010f1bb2aa0f",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b1fa0e5eb197def9",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/aulas/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 1320,
        "wires": [
            [
                "7f3f099141fe6ff5"
            ]
        ]
    },
    {
        "id": "7f3f099141fe6ff5",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 20",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { nombre } = msg.payload;\n\n// Validar campos obligatorios\nif (!nombre) {\n    msg.payload = { error: \"El nombre del aula es obligatorio\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    INSERT INTO aulas(nombre)\n    VALUES($1)\n`;\nmsg.params = [nombre];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1320,
        "wires": [
            [
                "bab66aa49cdaa095"
            ]
        ]
    },
    {
        "id": "bab66aa49cdaa095",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210,
        "y": 1320,
        "wires": [
            [
                "bbce614acc95c801"
            ]
        ]
    },
    {
        "id": "bbce614acc95c801",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9ba95dc6ae620901",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/aulas/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 1360,
        "wires": [
            [
                "110a77c034b2b569"
            ]
        ]
    },
    {
        "id": "110a77c034b2b569",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 21",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { id, nombre } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Validar campos obligatorios\nif (!nombre) {\n    msg.payload = { error: \"El nombre del aula es obligatorio\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    UPDATE aulas\n    SET nombre = $1\n    WHERE id = $2\n`;\nmsg.params = [nombre, id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1360,
        "wires": [
            [
                "85a0efb009bd47b9"
            ]
        ]
    },
    {
        "id": "85a0efb009bd47b9",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210,
        "y": 1360,
        "wires": [
            [
                "00216ea41236c1b2"
            ]
        ]
    },
    {
        "id": "00216ea41236c1b2",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 1360,
        "wires": []
    },
    {
        "id": "a3b8b7413a56816c",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/aulas/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 1400,
        "wires": [
            [
                "51e095ad64fa8b95"
            ]
        ]
    },
    {
        "id": "51e095ad64fa8b95",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 22",
        "func": "// Extraer ID del cuerpo de la solicitud\nconst { id } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    DELETE FROM aulas\n    WHERE id = $1\n`;\nmsg.params = [id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1400,
        "wires": [
            [
                "c3d7c5c4c44b9102"
            ]
        ]
    },
    {
        "id": "c3d7c5c4c44b9102",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210,
        "y": 1400,
        "wires": [
            [
                "0d23e78e615e5d9a"
            ]
        ]
    },
    {
        "id": "0d23e78e615e5d9a",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 1400,
        "wires": []
    },
    {
        "id": "d47a6dd73e9437f4",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Interfaz aulas",
        "url": "/interfaz/aulas",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1930,
        "y": 600,
        "wires": [
            [
                "363408f38d51b67d"
            ]
        ]
    },
    {
        "id": "363408f38d51b67d",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n    <title>Gestión de Aulas</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- Bootstrap 5 for modern UI components -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css\">\n    <!-- JSGrid CSS -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\">\n    <!-- Font Awesome for icons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">\n    <!-- Google Font -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/google-fonts/1.0.0/google-fonts.css\">\n\n    <style>\n        :root {\n            --primary: #4e73df;\n            --secondary: #f8f9fc;\n            --dark: #5a5c69;\n            --success: #1cc88a;\n            --danger: #e74a3b;\n            --warning: #f6c23e;\n            --info: #36b9cc;\n        }\n\n        body {\n            font-family: 'Nunito', 'Poppins', sans-serif;\n            background-color: var(--secondary);\n            color: var(--dark);\n            padding-top: 56px;\n        }\n\n        .dashboard-header {\n            background-color: white;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58, 59, 69, .15);\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n        }\n\n        .card {\n            border: none;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58, 59, 69, .10);\n            margin-bottom: 1.5rem;\n        }\n\n        .card-header {\n            background-color: white;\n            border-bottom: 1px solid #e3e6f0;\n            padding: 1rem 1.25rem;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n\n        .btn-primary {\n            background-color: var(--primary);\n            border-color: var(--primary);\n        }\n\n        .btn-primary:hover {\n            background-color: #2e59d9;\n            border-color: #2653d4;\n        }\n\n        #jsgrid {\n            width: 100%;\n            border: none;\n        }\n\n        .jsgrid-header-row>th {\n            background-color: #f8f9fc;\n            color: #4e73df;\n            font-weight: 600;\n            border-top: none;\n        }\n\n        .jsgrid-row,\n        .jsgrid-alt-row {\n            transition: background-color 0.2s;\n        }\n\n        .jsgrid-row:hover,\n        .jsgrid-alt-row:hover {\n            background-color: #eaecf4;\n        }\n\n        .jsgrid-cell {\n            padding: 12px !important;\n        }\n\n        .status-toast {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1050;\n            min-width: 300px;\n        }\n\n        /* Custom JSGrid styling */\n        .jsgrid-grid-body {\n            font-size: 0.9rem;\n        }\n\n        .jsgrid-insert-row input,\n        .jsgrid-edit-row input,\n        .jsgrid-filter-row input,\n        .jsgrid-insert-row select,\n        .jsgrid-edit-row select {\n            border: 1px solid #d1d3e2;\n            border-radius: 0.35rem;\n            padding: 0.375rem 0.75rem;\n            font-size: 0.9rem;\n            width: 100%;\n        }\n\n        .jsgrid-button {\n            cursor: pointer;\n        }\n\n        .jsgrid-delete-button:hover {\n            color: var(--danger);\n        }\n\n        .jsgrid-edit-button:hover {\n            color: var(--primary);\n        }\n\n        /* Empty data message */\n        .jsgrid-nodata-row td {\n            padding: 2rem;\n            text-align: center;\n            color: #858796;\n            font-style: italic;\n        }\n\n        /* Stats cards */\n        .stat-card {\n            border-left: 4px solid var(--primary);\n            border-radius: 0.35rem;\n            transition: transform 0.2s;\n        }\n\n        .stat-card:hover {\n            transform: translateY(-3px);\n        }\n\n        .stat-card-primary {\n            border-left-color: var(--primary);\n        }\n\n        .stat-card-info {\n            border-left-color: var(--info);\n        }\n\n        .stat-card-success {\n            border-left-color: var(--success);\n        }\n\n        /* Animate refresh icon */\n        .fa-spin-hover:hover {\n            animation: fa-spin 2s infinite linear;\n        }\n\n        @keyframes fa-spin {\n            0% {\n                transform: rotate(0deg);\n            }\n\n            100% {\n                transform: rotate(359deg);\n            }\n        }\n\n        /* Responsive adjustments */\n        @media (max-width: 992px) {\n\n            .jsgrid-grid-header,\n            .jsgrid-grid-body {\n                overflow-x: auto;\n            }\n        }\n\n        \n        /* Custom navbar styling */\n        .navbar-custom {\n            background-color: white;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n        }\n        \n        .navbar-custom .navbar-brand {\n            color: var(--primary);\n            font-weight: 700;\n        }\n        \n        .navbar-custom .nav-link {\n            color: var(--dark);\n            font-weight: 600;\n            padding: 0.5rem 1rem;\n            border-radius: 0.25rem;\n            transition: all 0.2s;\n        }\n        \n        .navbar-custom .nav-link:hover,\n        .navbar-custom .nav-link.active {\n            color: var(--primary);\n            background-color: rgba(78, 115, 223, 0.1);\n        }\n        \n        .navbar-custom .navbar-toggler {\n            border-color: var(--primary);\n        }\n        \n    </style>\n</head>\n\n<body>\n\n<!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg navbar-custom fixed-top\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <i class=\"fas fa-school me-2\"></i>Sistema Escolar\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\" aria-controls=\"navbarMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" href=\"/interfaz/usuarios\">\n                            <i class=\"fas fa-users me-1\"></i>Usuarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/clases\">\n                            <i class=\"fas fa-chalkboard-teacher me-1\"></i>Clases\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/aulas\">\n                            <i class=\"fas fa-door-open me-1\"></i>Aulas\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/horarios\">\n                            <i class=\"fas fa-clock me-1\"></i>Horarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/asistencia\">\n                            <i class=\"fas fa-clipboard-check me-1\"></i>Asistencia\n                        </a>\n                    </li>\n                </ul>\n                <div class=\"d-flex\">\n                    <span class=\"navbar-text me-3\">\n                        <i class=\"fas fa-user-circle me-1\"></i>Admin\n                    </span>\n                </div>\n            </div>\n        </div>\n    </nav>\n\n    <div class=\"container-fluid py-4 px-4\">\n        <!-- Header -->\n        <div class=\"dashboard-header mb-4\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h1 class=\"h3 mb-0 text-gray-800\">\n                        <i class=\"fas fa-door-open me-2\"></i>Gestión de Aulas\n                    </h1>\n                    <p class=\"text-muted small mb-0\">Sistema de administración de aulas y espacios</p>\n                </div>\n                <div class=\"col-auto\">\n                    <button class=\"btn btn-primary btn-sm\" id=\"btn-refresh\">\n                        <i class=\"fas fa-sync-alt me-1 fa-spin-hover\"></i>Actualizar\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <!-- Status Toast -->\n        <div class=\"toast status-toast align-items-center text-white bg-primary border-0\" role=\"alert\"\n            aria-live=\"assertive\" aria-atomic=\"true\" id=\"status-toast\">\n            <div class=\"d-flex\">\n                <div class=\"toast-body\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    <span id=\"status-message\">Mensaje de estado</span>\n                </div>\n                <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n            </div>\n        </div>\n\n        <!-- Stats Row -->\n        <div class=\"row mb-4\">\n            <div class=\"col-xl-3 col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-primary h-100 py-2\">\n                    <div class=\"card-body\">\n                        <div class=\"row align-items-center\">\n                            <div class=\"col\">\n                                <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Total Aulas</div>\n                                <div class=\"h5 mb-0 font-weight-bold text-gray-800\" id=\"total-aulas\">0</div>\n                            </div>\n                            <div class=\"col-auto\">\n                                <i class=\"fas fa-door-open fa-2x text-gray-300\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n        <!-- Main Content -->\n        <div class=\"card shadow mb-4\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Lista de Aulas</h6>\n                <div>\n                    <button class=\"btn btn-sm btn-success\" id=\"btn-add\">\n                        <i class=\"fas fa-plus me-1\"></i>Nueva Aula\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <div id=\"jsgrid\"></div>\n            </div>\n        </div>\n\n        <!-- Information Card -->\n        <div class=\"card shadow mb-4\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Información</h6>\n            </div>\n            <div class=\"card-body\">\n                <p>\n                    Utilice este panel para administrar las aulas disponibles en el sistema. Puede agregar nuevas aulas,\n                    editar las existentes o eliminarlas si ya no están disponibles.\n                </p>\n                <p class=\"mb-0\">\n                    <i class=\"fas fa-info-circle me-1 text-info\"></i>\n                    Recuerde que al eliminar un aula, se eliminarán también todas las relaciones asociadas a ella.\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <!-- Scripts -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script>\n        $(function () {\n            console.log(\"Inicializando CRUD Aulas\");\n            \n// Establecer la navegación activa según la URL actual\n            function setActiveNavItem() {\n                const currentPath = window.location.pathname;\n                $('.navbar-nav .nav-link').removeClass('active');\n                $('.navbar-nav .nav-link').each(function() {\n                    if ($(this).attr('href') === currentPath) {\n                        $(this).addClass('active');\n                    }\n                });\n            }\n            \n            // Llamar a la función para establecer el ítem de navegación activo\n            setActiveNavItem();\n            \n\n            // Toast para mensajes de estado\n            const statusToast = new bootstrap.Toast(document.getElementById('status-toast'), {\n                delay: 3000,\n                autohide: true\n            });\n            \n            let aulas = [];\n            let lastUpdate = \"--\";\n            \n            // Mostrar mensajes de estado con toast\n            function showStatus(message, type = \"primary\") {\n                const toast = $(\"#status-toast\");\n                toast.removeClass().addClass(`toast status-toast align-items-center text-white bg-${type} border-0`);\n                $(\"#status-message\").text(message);\n                statusToast.show();\n                console.log(message);\n            }\n            \n            // Actualizar estadísticas\n            function updateStats() {\n                $(\"#total-aulas\").text(aulas.length);\n                lastUpdate = new Date().toLocaleTimeString();\n                $(\"#last-update\").text(lastUpdate);\n            }\n            \n            // Función para cargar las aulas\n            function loadAulas() {\n                showStatus(\"Cargando aulas...\", \"info\");\n                $(\"#system-status\").text(\"Cargando...\");\n                \n                return $.ajax({\n                    url: \"/aulas/get-all\",\n                    method: \"GET\",\n                    dataType: \"json\"\n                }).then(data => {\n                    if (data && Array.isArray(data)) {\n                        aulas = data;\n                        if ($(\"#jsgrid\").data(\"JSGrid\")) {\n                            $(\"#jsgrid\").jsGrid(\"loadData\");\n                        }\n                        updateStats();\n                        $(\"#system-status\").text(\"Activo\");\n                        showStatus(`${data.length} aulas cargadas correctamente`, \"success\");\n                    } else {\n                        showStatus(\"No se encontraron aulas o formato de datos incorrecto\", \"warning\");\n                        $(\"#system-status\").text(\"Sin datos\");\n                    }\n                }).fail(error => {\n                    showStatus(\"Error al cargar aulas: \" + error.statusText, \"danger\");\n                    $(\"#system-status\").text(\"Error\");\n                    console.error(\"Error al cargar aulas:\", error);\n                });\n            }\n            \n            function initGrid() {\n                $(\"#jsgrid\").jsGrid({\n                    width: \"100%\",\n                    height: \"auto\",\n                    \n                    inserting: false,\n                    editing: true,\n                    sorting: true,\n                    paging: true,\n                    pageSize: 10,\n                    pageButtonCount: 5,\n                    \n                    noDataContent: \"No hay aulas registradas\",\n                    confirmDeleting: true,\n                    deleteConfirm: \"¿Está seguro de eliminar esta aula?\",\n                    \n                    data: aulas,\n                    \n                    fields: [\n                        { \n                            name: \"id\", \n                            title: \"ID\", \n                            type: \"text\", \n                            width: 50, \n                            readOnly: true, \n                            editing: false, \n                            inserting: false,\n                            align: \"center\",\n                            css: \"font-weight-bold\"\n                        },\n                        { \n                            name: \"nombre\", \n                            title: \"Nombre del Aula\", \n                            type: \"text\", \n                            width: 250,\n                            validate: {\n                                validator: function(value) {\n                                    return value && value.length > 0 && value.length <= 100;\n                                },\n                                message: \"El nombre del aula debe tener entre 1 y 100 caracteres\"\n                            }\n                        },\n                        { \n                            type: \"control\",\n                            editButton: true,\n                            deleteButton: true,\n                            clearFilterButton: true,\n                            modeSwitchButton: true,\n                            width: 100\n                        }\n                    ],\n                    \n                    controller: {\n                        loadData: function() {\n                            return aulas;\n                        },\n                        insertItem: function(item) {\n                            showStatus(\"Insertando aula...\", \"info\");\n                            return $.ajax({\n                                type: \"POST\",\n                                url: \"/aulas/insert\",\n                                data: item,\n                                dataType: \"json\"\n                            })\n                            .done(() => {\n                                showStatus(\"Aula insertada correctamente\", \"success\");\n                                return loadAulas();\n                            })\n                            .fail(error => {\n                                showStatus(\"Error al insertar aula: \" + error.statusText, \"danger\");\n                                console.error(\"Error al insertar:\", error);\n                            });\n                        },\n                        updateItem: function(item) {\n                            showStatus(\"Actualizando aula...\", \"info\");\n                            return $.ajax({\n                                type: \"PUT\",\n                                url: \"/aulas/update\",\n                                data: item,\n                                dataType: \"json\"\n                            })\n                            .done(() => {\n                                showStatus(\"Aula actualizada correctamente\", \"success\");\n                                return loadAulas();\n                            })\n                            .fail(error => {\n                                showStatus(\"Error al actualizar aula: \" + error.statusText, \"danger\");\n                                console.error(\"Error al actualizar:\", error);\n                            });\n                        },\n                        deleteItem: function(item) {\n                            showStatus(\"Eliminando aula...\", \"info\");\n                            return $.ajax({\n                                type: \"DELETE\",\n                                url: \"/aulas/delete\",\n                                data: item,\n                                dataType: \"json\"\n                            })\n                            .done(() => {\n                                showStatus(\"Aula eliminada correctamente\", \"success\");\n                                return loadAulas();\n                            })\n                            .fail(error => {\n                                showStatus(\"Error al eliminar aula: \" + error.statusText, \"danger\");\n                                console.error(\"Error al eliminar:\", error);\n                            });\n                        }\n                    },\n                    \n                    onError: function(args) {\n                        showStatus(\"Error en la operación: \" + args.args[0], \"danger\");\n                    }\n                });\n            }\n            \n            // Botón para añadir nueva aula\n            $(\"#btn-add\").on(\"click\", function() {\n                $(\"#jsgrid\").jsGrid(\"option\", \"inserting\", true);\n                setTimeout(function() {\n                    $(\".jsgrid-insert-row\").find(\"input:first\").focus();\n                }, 100);\n            });\n            \n            // Botón para refrescar datos\n            $(\"#btn-refresh\").on(\"click\", function() {\n                $(this).find(\"i\").addClass(\"fa-spin\");\n                loadAulas().always(function() {\n                    setTimeout(function() {\n                        $(\"#btn-refresh\").find(\"i\").removeClass(\"fa-spin\");\n                    }, 500);\n                });\n            });\n            \n            // Inicializar\n            loadAulas().then(initGrid);\n        });\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 2120,
        "y": 600,
        "wires": [
            [
                "c19a02752dd5d60f"
            ]
        ]
    },
    {
        "id": "c19a02752dd5d60f",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2260,
        "y": 600,
        "wires": []
    },
    {
        "id": "f9d9fcc923e39c7b",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/aulas/get-all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 940,
        "wires": [
            [
                "54dce4bd5c754d68"
            ]
        ]
    },
    {
        "id": "54dce4bd5c754d68",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 23",
        "func": "// Consulta SQL para obtener todas las aulas\nmsg.query = `\n    SELECT id, nombre\n    FROM aulas\n`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 940,
        "wires": [
            [
                "ce0c4197b00c849f"
            ]
        ]
    },
    {
        "id": "ce0c4197b00c849f",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1170,
        "y": 940,
        "wires": [
            [
                "656c19da6271f627"
            ]
        ]
    },
    {
        "id": "656c19da6271f627",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1320,
        "y": 940,
        "wires": []
    },
    {
        "id": "8c3668dd60e11f05",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/horarios/get-all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 980,
        "wires": [
            [
                "316b1c1fc01e3573"
            ]
        ]
    },
    {
        "id": "316b1c1fc01e3573",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 24",
        "func": "msg.query = `\n    SELECT \n        h.id, \n        c.nombre AS clase_nombre, \n        aul.nombre AS aula_nombre, \n        h.dia_semana, \n        h.hora_inicio, \n        h.hora_fin,\n        h.id_clase, \n        h.id_aula \n    FROM horarios h\n    JOIN clases c ON h.id_clase = c.id\n    JOIN aulas aul ON h.id_aula = aul.id\n`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 980,
        "wires": [
            [
                "a99601dbd87f30ff"
            ]
        ]
    },
    {
        "id": "a99601dbd87f30ff",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1210,
        "y": 980,
        "wires": [
            [
                "2acddc78450303ac"
            ]
        ]
    },
    {
        "id": "2acddc78450303ac",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 980,
        "wires": []
    },
    {
        "id": "acc95d3c37ceb5ba",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/horarios/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 820,
        "y": 1460,
        "wires": [
            [
                "0b52c734eebde2bc"
            ]
        ]
    },
    {
        "id": "0b52c734eebde2bc",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 25",
        "func": "const { dia_semana, hora_inicio, hora_fin, id_clase, id_aula } = msg.payload;\n\n// Validar campos obligatorios\nif (!dia_semana || !hora_inicio || !hora_fin || !id_clase || !id_aula) {\n    msg.payload = { error: \"Todos los campos son obligatorios\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    INSERT INTO horarios(dia_semana, hora_inicio, hora_fin, id_clase, id_aula)\n    VALUES($1, $2, $3, $4, $5)\n`;\nmsg.params = [dia_semana, hora_inicio, hora_fin, id_clase, id_aula];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1460,
        "wires": [
            [
                "f6c2ef37e6dd8c62"
            ]
        ]
    },
    {
        "id": "f6c2ef37e6dd8c62",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1190,
        "y": 1460,
        "wires": [
            [
                "bec8795d5a4dc3a9"
            ]
        ]
    },
    {
        "id": "bec8795d5a4dc3a9",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1460,
        "wires": []
    },
    {
        "id": "ff728f361b696c81",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/horarios/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 820,
        "y": 1500,
        "wires": [
            [
                "3ebe413b6f71f0e7"
            ]
        ]
    },
    {
        "id": "3ebe413b6f71f0e7",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 26",
        "func": "const { id, dia_semana, hora_inicio, hora_fin, id_clase, id_aula } = msg.payload;\n\n// Validar ID\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\n// Validar campos obligatorios\nif (!dia_semana || !hora_inicio || !hora_fin || !id_clase || !id_aula) {\n    msg.payload = { error: \"Todos los campos son obligatorios\" };\n    return msg;\n}\n\n// Construir consulta SQL\nmsg.query = `\n    UPDATE horarios\n    SET dia_semana = $1, hora_inicio = $2, hora_fin = $3, id_clase = $4, id_aula = $5\n    WHERE id = $6\n`;\nmsg.params = [dia_semana, hora_inicio, hora_fin, id_clase, id_aula, id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1500,
        "wires": [
            [
                "d206a43f1fa69d6c"
            ]
        ]
    },
    {
        "id": "d206a43f1fa69d6c",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1190,
        "y": 1500,
        "wires": [
            [
                "3e0c6d0caa47f1b9"
            ]
        ]
    },
    {
        "id": "3e0c6d0caa47f1b9",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1500,
        "wires": []
    },
    {
        "id": "26324c0ef06ecf68",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "url": "/horarios/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 820,
        "y": 1540,
        "wires": [
            [
                "053aeb576061ecf4"
            ]
        ]
    },
    {
        "id": "053aeb576061ecf4",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "function 27",
        "func": "const { id } = msg.payload;\n\nif (!id) {\n    msg.payload = { error: \"ID no proporcionado\" };\n    return msg;\n}\n\nmsg.query = `\n    DELETE FROM horarios\n    WHERE id = $1\n`;\nmsg.params = [id];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1540,
        "wires": [
            [
                "6efc92be7b4d2804"
            ]
        ]
    },
    {
        "id": "6efc92be7b4d2804",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1190,
        "y": 1540,
        "wires": [
            [
                "6c15149f6ce90a63"
            ]
        ]
    },
    {
        "id": "6c15149f6ce90a63",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "20d0ae3548c13292",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3ae552824e509d74",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Interfaz horarios",
        "url": "/interfaz/horarios",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1940,
        "y": 640,
        "wires": [
            [
                "9778063d7fbef4f4"
            ]
        ]
    },
    {
        "id": "9778063d7fbef4f4",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n    <title>Gestión de Horarios</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n\n    <style>\n        body {\n            font-family: 'Segoe UI', 'Arial', sans-serif;\n            background-color: #f5f7f9;\n            padding: 0;\n            margin: 0;\n            padding-top: 56px;\n        }\n\n        .top-nav {\n            background-color: #343a40;\n            padding: 10px 20px;\n            color: white;\n            display: flex;\n            align-items: center;\n            border-bottom: 1px solid #2c3338;\n        }\n\n        .top-nav i {\n            margin-right: 8px;\n            font-size: 16px;\n        }\n\n        .content-wrapper {\n            padding: 20px;\n        }\n\n        .page-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 20px;\n            padding: 15px 20px;\n            background-color: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.08);\n        }\n\n        .page-header h1 {\n            font-size: 1.8rem;\n            color: #424242;\n            margin: 0;\n            display: flex;\n            align-items: center;\n        }\n\n        .page-header h1 i {\n            color: #6c757d;\n            margin-right: 10px;\n            font-size: 1.5rem;\n        }\n\n        .page-header small {\n            display: block;\n            font-size: 0.85rem;\n            color: #6c757d;\n            margin-top: 5px;\n            margin-left: 32px;\n        }\n\n        .stats-container {\n            display: flex;\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n\n        .stat-card {\n            flex: 1;\n            background-color: white;\n            border-radius: 8px;\n            padding: 20px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.08);\n            position: relative;\n        }\n\n        .stat-title {\n            font-size: 0.9rem;\n            color: #199473;\n            margin-bottom: 15px;\n            text-transform: uppercase;\n            font-weight: 600;\n        }\n\n        .stat-value {\n            font-size: 1.5rem;\n            font-weight: 600;\n            color: #424242;\n        }\n\n        .stat-icon {\n            position: absolute;\n            top: 15px;\n            right: 15px;\n            width: 32px;\n            height: 32px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 50%;\n            color: white;\n        }\n\n        .icon-blue {\n            background-color: #5369e0;\n        }\n\n        .icon-green {\n            background-color: #199473;\n        }\n\n        .icon-gray {\n            background-color: #6c757d;\n        }\n\n        .grid-container {\n            background-color: white;\n            border-radius: 8px;\n            padding: 20px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.08);\n        }\n\n        .grid-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n        }\n\n        .grid-title {\n            font-size: 1.2rem;\n            color: #424242;\n        }\n\n        .btn-primary {\n            background-color: #199473;\n            border-color: #199473;\n        }\n\n        .btn-primary:hover {\n            background-color: #147d61;\n            border-color: #147d61;\n        }\n\n        .info-section {\n            background-color: white;\n            border-radius: 8px;\n            padding: 20px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.08);\n            margin-top: 20px;\n        }\n\n        .info-title {\n            font-size: 1rem;\n            color: #424242;\n            margin-bottom: 10px;\n        }\n\n        .info-alert {\n            display: flex;\n            align-items: flex-start;\n            gap: 10px;\n            background-color: #f8f9fa;\n            border-left: 4px solid #17a2b8;\n            padding: 15px;\n            margin-top: 10px;\n            border-radius: 4px;\n        }\n\n        .info-alert i {\n            color: #17a2b8;\n            margin-top: 2px;\n        }\n\n        #jsgrid {\n            width: 100%;\n        }\n\n        .jsgrid-header-row > th {\n            background-color: #f8f9fa;\n            color: #424242;\n            font-weight: 600;\n        }\n\n        .jsgrid-row, .jsgrid-alt-row {\n            border-bottom: 1px solid #e9ecef;\n        }\n\n        .jsgrid-cell {\n            padding: 12px 8px;\n        }\n\n        input[type=\"time\"] {\n            width: 100%;\n            border: 1px solid #ced4da;\n            border-radius: 4px;\n            padding: 5px;\n            height: 31px;\n        }\n\n        #status-message {\n            margin-bottom: 15px;\n            display: none;\n        }\n\n        .jsgrid-button {\n            background-image: url(https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css);\n            background-color: transparent;\n        }\n\n        select.form-control {\n            height: 31px;\n            padding: 0 8px;\n        }\n        \n        /* Custom navbar styling */\n        .navbar-custom {\n            background-color: white;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,59,69,.15);\n        }\n        \n        .navbar-custom .navbar-brand {\n            color: var(--primary);\n            font-weight: 700;\n        }\n        \n        .navbar-custom .nav-link {\n            color: var(--dark);\n            font-weight: 600;\n            padding: 0.5rem 1rem;\n            border-radius: 0.25rem;\n            transition: all 0.2s;\n        }\n        \n        .navbar-custom .nav-link:hover,\n        .navbar-custom .nav-link.active {\n            color: var(--primary);\n            background-color: rgba(78, 115, 223, 0.1);\n        }\n        \n        .navbar-custom .navbar-toggler {\n            border-color: var(--primary);\n        }\n        \n    </style>\n</head>\n\n<body>\n    \n<!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg navbar-custom fixed-top\">\n        <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <i class=\"fas fa-school me-2\"></i>Sistema Escolar\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\" aria-controls=\"navbarMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" href=\"/interfaz/usuarios\">\n                            <i class=\"fas fa-users me-1\"></i>Usuarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/clases\">\n                            <i class=\"fas fa-chalkboard-teacher me-1\"></i>Clases\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/aulas\">\n                            <i class=\"fas fa-door-open me-1\"></i>Aulas\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/horarios\">\n                            <i class=\"fas fa-clock me-1\"></i>Horarios\n                        </a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/interfaz/asistencia\">\n                            <i class=\"fas fa-clipboard-check me-1\"></i>Asistencia\n                        </a>\n                    </li>\n                </ul>\n                <div class=\"d-flex\">\n                    <span class=\"navbar-text me-3\">\n                        <i class=\"fas fa-user-circle me-1\"></i>Admin\n                    </span>\n                </div>\n            </div>\n        </div>\n    </nav>\n    <div class=\"content-wrapper\">\n        <div class=\"page-header\">\n            <div>\n                <h1><i class=\"fas fa-clock\"></i> Gestión de Horarios</h1>\n                <small>Sistema de administración de horarios</small>\n            </div>\n            <button class=\"btn btn-primary refresh-btn\">\n                <i class=\"fas fa-sync\"></i> Actualizar\n            </button>\n        </div>\n\n        <div class=\"stats-container\">\n            <div class=\"stat-card\">\n                <div class=\"stat-title\">TOTAL HORARIOS</div>\n                <div class=\"stat-value\" id=\"total-horarios\">0</div>\n                <div class=\"stat-icon icon-blue\">\n                    <i class=\"fas fa-calendar-check\"></i>\n                </div>\n            </div>\n            \n        </div>\n\n        <div class=\"grid-container\">\n            <div class=\"grid-header\">\n                <div class=\"grid-title\">Lista de Horarios</div>\n                <div id=\"status-message\" class=\"alert\"></div>\n            </div>\n            <div id=\"jsgrid\"></div>\n        </div>\n\n        <div class=\"info-section\">\n            <div class=\"info-title\">Información</div>\n            <p>Utilice este panel para administrar los horarios de clases. Puede asignar aulas a clases específicas en días y horarios determinados.</p>\n            <div class=\"info-alert\">\n                <i class=\"fas fa-info-circle\"></i>\n                <div>Recuerde que al eliminar un horario, se eliminarán también todas las relaciones asociadas.</div>\n            </div>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        $(function () {\n            console.log(\"Inicializando CRUD Horarios\");\n\n// Establecer la navegación activa según la URL actual\n            function setActiveNavItem() {\n                const currentPath = window.location.pathname;\n                $('.navbar-nav .nav-link').removeClass('active');\n                $('.navbar-nav .nav-link').each(function() {\n                    if ($(this).attr('href') === currentPath) {\n                        $(this).addClass('active');\n                    }\n                });\n            }\n            \n            // Llamar a la función para establecer el ítem de navegación activo\n            setActiveNavItem();\n            \n            // Variables para almacenar datos\n            let db = [];\n            let clases = [];\n            let aulas = [];\n            \n            // Establecer fecha y hora actual para la última actualización\n            function updateLastUpdate() {\n                const now = new Date();\n                const timeStr = now.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit', second: '2-digit' });\n                $(\"#ultima-actualizacion\").text(timeStr);\n            }\n            \n            // Función para mostrar mensajes de estado\n            function showStatus(message, type = \"info\") {\n                $(\"#status-message\").removeClass().addClass(`alert alert-${type}`).text(message).show();\n                setTimeout(() => {\n                    $(\"#status-message\").hide();\n                }, 3000);\n            }\n\n            // Función para mostrar errores\n            function showError(message) {\n                $(\"#status-message\").removeClass().addClass(\"alert alert-danger\").text(message).show();\n                console.error(message);\n            }\n\n            // Definición del campo de tiempo - Método alternativo\n            function TimeField(config) {\n                jsGrid.Field.call(this, config);\n            }\n\n            TimeField.prototype = new jsGrid.Field({\n                itemTemplate: function(value) {\n                    return value || \"\";\n                },\n                insertTemplate: function() {\n                    return this._insertControl = $(\"<input>\").attr(\"type\", \"time\");\n                },\n                editTemplate: function(value) {\n                    return this._editControl = $(\"<input>\").attr(\"type\", \"time\").val(value || \"\");\n                },\n                insertValue: function() {\n                    return this._insertControl.val();\n                },\n                editValue: function() {\n                    return this._editControl.val();\n                }\n            });\n\n            jsGrid.fields.time = TimeField;\n\n            // Cargar clases y aulas ANTES de inicializar la tabla\n            try {\n                Promise.all([loadClases(), loadAulas()])\n                    .then(() => {\n                        return loadHorarios();\n                    })\n                    .then(() => {\n                        initializeGrid();\n                        updateLastUpdate();\n                        console.log(\"Grid inicializado correctamente\");\n                    })\n                    .catch(error => {\n                        console.error(\"Error al cargar datos:\", error);\n                        showError(\"Error al cargar datos: \" + (error.message || \"Verifica la consola\"));\n                    });\n            } catch (error) {\n                console.error(\"Error en el flujo principal:\", error);\n                showError(\"Error en la inicialización: \" + error.message);\n            }\n\n            // Actualizar al hacer clic en el botón\n            $(\".refresh-btn\").on(\"click\", function() {\n                loadHorarios().then(() => {\n                    updateLastUpdate();\n                    showStatus(\"Datos actualizados correctamente\", \"success\");\n                });\n            });\n\n            // Función para cargar clases\n            function loadClases() {\n                return $.ajax({\n                    url: \"/clases/get-all\",\n                    method: \"GET\",\n                    dataType: \"json\"\n                })\n                .then(data => {\n                    clases = data.map(clase => ({ Id: clase.id, Name: clase.nombre }));\n                    console.log(\"Clases cargadas:\", clases);\n                })\n                .fail(error => {\n                    throw new Error(\"Error al cargar clases: \" + error.statusText);\n                });\n            }\n\n            // Función para cargar aulas\n            function loadAulas() {\n                return $.ajax({\n                    url: \"/aulas/get-all\",\n                    method: \"GET\",\n                    dataType: \"json\"\n                })\n                .then(data => {\n                    aulas = data.map(aula => ({ Id: aula.id, Name: aula.nombre }));\n                    console.log(\"Aulas cargadas:\", aulas);\n                })\n                .fail(error => {\n                    throw new Error(\"Error al cargar aulas: \" + error.statusText);\n                });\n            }\n\n            // Función para cargar horarios\n            function loadHorarios() {\n                return $.ajax({\n                    url: \"/horarios/get-all\",\n                    method: \"GET\",\n                    dataType: \"json\"\n                })\n                .then(data => {\n                    db = data.map(horario => ({\n                        ...horario,\n                        clase_nombre: horario.clase_nombre || \"No asignado\",\n                        aula_nombre: horario.aula_nombre || \"No asignado\"\n                    }));\n                    \n                    // Actualizar contador de horarios\n                    $(\"#total-horarios\").text(db.length);\n                    \n                    if($(\"#jsgrid\").data(\"JSGrid\")) {\n                        $(\"#jsgrid\").jsGrid(\"loadData\");\n                    }\n                    \n                    console.log(\"Horarios cargados:\", db);\n                })\n                .fail(error => {\n                    throw new Error(\"Error al cargar horarios: \" + error.statusText);\n                });\n            }\n\n            // Inicializar jsGrid\n            function initializeGrid() {\n                $(\"#jsgrid\").jsGrid({\n                    width: \"100%\",\n                    height: \"auto\",\n                    inserting: true,\n                    editing: true,\n                    sorting: true,\n                    paging: true,\n                    pageSize: 10,\n                    \n                    data: db,\n\n                    fields: [\n                        { title: \"ID\", name: \"id\", type: \"text\", width: 50, readOnly: true, editing: false, inserting: false },\n                        { \n                            title: \"Clase\", \n                            name: \"id_clase\", \n                            type: \"select\", \n                            items: clases, \n                            valueField: \"Id\", \n                            textField: \"Name\", \n                            width: 150, \n                            validate: \"required\" \n                        },\n                        { \n                            title: \"Aula\", \n                            name: \"id_aula\", \n                            type: \"select\", \n                            items: aulas, \n                            valueField: \"Id\", \n                            textField: \"Name\", \n                            width: 100, \n                            validate: \"required\" \n                        },\n                        { \n                            title: \"Día Semana\", \n                            name: \"dia_semana\", \n                            type: \"select\", \n                            items: [\n                                { Name: \"Lunes\", Id: \"Lunes\" }, \n                                { Name: \"Martes\", Id: \"Martes\" }, \n                                { Name: \"Miércoles\", Id: \"Miércoles\" }, \n                                { Name: \"Jueves\", Id: \"Jueves\" }, \n                                { Name: \"Viernes\", Id: \"Viernes\" },\n                                { Name: \"Sabado\", Id: \"Sabado\" },\n                                { Name: \"Domingo\", Id: \"Domingo\" }\n                            ], \n                            valueField: \"Id\", \n                            textField: \"Name\", \n                            width: 100, \n                            validate: \"required\" \n                        },\n                        { title: \"Hora Inicio\", name: \"hora_inicio\", type: \"time\", width: 100, validate: \"required\" },\n                        { title: \"Hora Fin\", name: \"hora_fin\", type: \"time\", width: 100, validate: \"required\" },\n                        { type: \"control\" }\n                    ],\n\n                    controller: {\n                        loadData: function() {\n                            return db;\n                        },\n                        insertItem: function(item) {\n                            showStatus(\"Insertando horario...\");\n                            return $.ajax({\n                                type: \"POST\",\n                                url: \"/horarios/insert\",\n                                data: item\n                            })\n                            .done(function() {\n                                showStatus(\"Horario insertado correctamente\", \"success\");\n                                updateLastUpdate();\n                                return loadHorarios();\n                            })\n                            .fail(function(error) {\n                                showError(\"Error al insertar: \" + error.statusText);\n                            });\n                        },\n                        updateItem: function(item) {\n                            showStatus(\"Actualizando horario...\");\n                            return $.ajax({\n                                type: \"PUT\",\n                                url: \"/horarios/update\",\n                                data: item\n                            })\n                            .done(function() {\n                                showStatus(\"Horario actualizado correctamente\", \"success\");\n                                updateLastUpdate();\n                                return loadHorarios();\n                            })\n                            .fail(function(error) {\n                                showError(\"Error al actualizar: \" + error.statusText);\n                            });\n                        },\n                        deleteItem: function(item) {\n                            showStatus(\"Eliminando horario...\");\n                            return $.ajax({\n                                type: \"DELETE\",\n                                url: \"/horarios/delete\",\n                                data: item\n                            })\n                            .done(function() {\n                                showStatus(\"Horario eliminado correctamente\", \"success\");\n                                updateLastUpdate();\n                                return loadHorarios();\n                            })\n                            .fail(function(error) {\n                                showError(\"Error al eliminar: \" + error.statusText);\n                            });\n                        }\n                    },\n                    \n                    onError: function(args) {\n                        showError(\"Error en la operación: \" + args.args[0]);\n                    }\n                });\n            }\n        });\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 2120,
        "y": 640,
        "wires": [
            [
                "6d344378e091776c"
            ]
        ]
    },
    {
        "id": "6d344378e091776c",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2260,
        "y": 640,
        "wires": []
    },
    {
        "id": "1a660c73d86ca9dc",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "url": "/inicio",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1920,
        "y": 680,
        "wires": [
            [
                "ce177269aea0ed53"
            ]
        ]
    },
    {
        "id": "ce177269aea0ed53",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Dashboard Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n  <h1>Bienvenido a UTNG</h1>\n  <div class=\"user-info\">\n    <p><strong>Tu id es: </strong> <span id=\"idUsuario\">{{req.query.user}}</span></p>\n  </div>\n  <p>Sigue los pasos del dispositivo en la pantalla</p>\n\n  <button onclick=\"enviarHuella()\" class=\"button\">Agregar Huella y RFID</button>\n  <button onclick=\"deleteHuella()\" class=\"button\">Eliminar huella y RFID</button>\n  <button onclick=\"updateHuella()\" class=\"button\">Actualizar huella y RFID</button>\n  \n<button class=\"button\" onclick=\"window.location.href='/login'\">Salir</button>\n</div>\n\n<script>\n  function enviarHuella() {\n    const idUsuario = parseInt(document.getElementById(\"idUsuario\").textContent);\n\n    const datos = {\n      idUsuario: idUsuario,\n      idHuella: idUsuario\n    };\n\n    fetch(\"/add/credenciales\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(datos)\n    })\n    .then(res => {\n      if (!res.ok) throw new Error(\"Error al enviar datos\");\n      return res.json();\n    })\n    .then(data => {\n      alert(\"Credenciales enviadas correctamente\");\n      console.log(\"Respuesta:\", data);\n    })\n    .catch(err => {\n      alert(\"Hubo un error al enviar las credenciales\");\n      console.error(err);\n    });\n  }\n\n  function deleteHuella() {\n  const idUsuario = parseInt(document.getElementById(\"idUsuario\").textContent);\n  \n  const datos = {\n  idHuella: idUsuario\n  };\n  \n  fetch(\"/delete/huella\", {\n  method: \"POST\",\n  headers: {\n  \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify(datos)\n  })\n  .then(res => {\n  if (!res.ok) throw new Error(\"Error al enviar datos\");\n  return res.json();\n  })\n  .then(data => {\n  alert(\"Credenciales enviadas correctamente\");\n  console.log(\"Respuesta:\", data);\n  })\n  .catch(err => {\n  alert(\"Hubo un error al enviar las credenciales\");\n  console.error(err);\n  });\n  }\n\n  function updateHuella() {\n  const idUsuario = parseInt(document.getElementById(\"idUsuario\").textContent);\n  \n  const datos = {\n  idHuella: idUsuario,\n  idUsuario : idUsuario\n  };\n  \n  fetch(\"/update/huella\", {\n  method: \"POST\",\n  headers: {\n  \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify(datos)\n  })\n  .then(res => {\n  if (!res.ok) throw new Error(\"Error al enviar datos\");\n  return res.json();\n  })\n  .then(data => {\n  alert(\"Credenciales enviadas correctamente\");\n  console.log(\"Respuesta:\", data);\n  })\n  .catch(err => {\n  alert(\"Hubo un error al enviar las credenciales\");\n  console.error(err);\n  });\n  }\n</script>\n\n<style>\n  .container {\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    padding: 30px;\n    max-width: 800px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #333;\n    margin-bottom: 20px;\n  }\n\n  .user-info {\n    padding: 10px;\n    background-color: #e7f3ff;\n    border-radius: 4px;\n    margin-bottom: 20px;\n  }\n\n  .button {\n    display: inline-block;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n    margin-top: 15px;\n  }\n\n  .button:hover {\n    background-color: #0056b3;\n  }\n</style>\n",
        "output": "str",
        "x": 2150,
        "y": 680,
        "wires": [
            [
                "6ce3ed1492e480ac"
            ]
        ]
    },
    {
        "id": "6ce3ed1492e480ac",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2350,
        "y": 680,
        "wires": []
    },
    {
        "id": "e3b86d71dced2303",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "",
        "url": "/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1570,
        "y": 860,
        "wires": [
            [
                "d861cc81cbdd0afa"
            ]
        ]
    },
    {
        "id": "d861cc81cbdd0afa",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "Validar datos de entrada",
        "func": "// Verificar datos esenciales\nif (!msg.payload.nombre || !msg.payload.codigo) {\n    msg.statusCode = 400;\n    msg.payload = { error: 'Faltan datos de nombre o código' };\n    return msg;\n}\nmsg.params = [msg.payload.nombre, msg.payload.codigo];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1790,
        "y": 860,
        "wires": [
            [
                "53f60ecd5f56f7a8"
            ]
        ]
    },
    {
        "id": "53f60ecd5f56f7a8",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "",
        "query": "SELECT login_usuario($1, $2) AS id_usuario",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2050,
        "y": 860,
        "wires": [
            [
                "fc39b8ae4617aca8"
            ]
        ]
    },
    {
        "id": "fc39b8ae4617aca8",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "Procesar resultado login",
        "func": "// Manejo de credenciales y errores\nif (msg.error || !msg.payload || (Array.isArray(msg.payload) && msg.payload.length === 0)) {\n    msg.statusCode = 401;\n    msg.payload = { mensaje: 'Credenciales incorrectas' };\n} else {\n    let data = Array.isArray(msg.payload) ? msg.payload[0] : msg.payload;\n    if (data.id_usuario !== undefined && data.id_usuario !== null) {\n        msg.statusCode = 200;\n        msg.payload = { \n            id_usuario: data.id_usuario,\n            mensaje: 'Login exitoso',\n            redirectUrl: '/inicio?user=' + data.id_usuario\n        };\n    } else {\n        msg.statusCode = 500;\n        msg.payload = { error: 'Credenciales inválidas' };\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 920,
        "wires": [
            [
                "3b34b9dc8547882e"
            ]
        ]
    },
    {
        "id": "3b34b9dc8547882e",
        "type": "switch",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "Check Login",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 920,
        "wires": [
            [
                "3db49040ae012953",
                "8a6b828bf61e9282"
            ],
            [
                "8a6b828bf61e9282"
            ]
        ]
    },
    {
        "id": "3db49040ae012953",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "Preparar notificación MQTT",
        "func": "var mqttData = { \n    accion: 'login_exitoso', \n    id_usuario: msg.payload.id_usuario, \n    timestamp: new Date().toISOString() \n};\n\n// Creamos un nuevo mensaje para MQTT mientras preservamos el mensaje original para la respuesta HTTP\nvar mqttMsg = { \n    payload: JSON.stringify(mqttData), \n    topic: 'sistema/usuarios/login' \n};\n\nreturn mqttMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 860,
        "wires": [
            [
                "2a6e25841875d07f"
            ]
        ]
    },
    {
        "id": "8a6b828bf61e9282",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "HTTP Response",
        "statusCode": "",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 2640,
        "y": 920,
        "wires": []
    },
    {
        "id": "2a6e25841875d07f",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "",
        "topic": "sistema/usuarios/login",
        "qos": "1",
        "retain": "",
        "broker": "c6a5131be9de9943",
        "x": 2620,
        "y": 860,
        "wires": []
    },
    {
        "id": "0b970e7d89606168",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Página de Login",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Sistema de Asistencia - Login</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f4f4f4;\n            margin: 0;\n            padding: 0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n        }\n        .login-container {\n            background-color: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n            padding: 30px;\n            width: 350px;\n        }\n        h2 {\n            text-align: center;\n            color: #333;\n            margin-bottom: 20px;\n        }\n        .input-group {\n            margin-bottom: 15px;\n        }\n        label {\n            display: block;\n            margin-bottom: 5px;\n            color: #666;\n        }\n        input {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            box-sizing: border-box;\n            font-size: 16px;\n        }\n        button {\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            padding: 12px 20px;\n            border-radius: 4px;\n            width: 100%;\n            font-size: 16px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n        }\n        button:hover {\n            background-color: #45a049;\n        }\n        .message {\n            margin-top: 20px;\n            padding: 10px;\n            border-radius: 4px;\n            text-align: center;\n        }\n        .success {\n            background-color: #dff0d8;\n            color: #3c763d;\n            border: 1px solid #d6e9c6;\n        }\n        .error {\n            background-color: #f2dede;\n            color: #a94442;\n            border: 1px solid #ebccd1;\n        }\n        .hidden {\n            display: none;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"login-container\">\n        <h2>Sistema de Asistencia</h2>\n        <form id=\"loginForm\">\n            <div class=\"input-group\">\n                <label for=\"nombre\">Nombre:</label>\n                <input type=\"text\" id=\"nombre\" name=\"nombre\" required>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"codigo\">Código:</label>\n                <input type=\"password\" id=\"codigo\" name=\"codigo\" required>\n            </div>\n            <button type=\"submit\">Iniciar Sesión</button>\n        </form>\n        <div id=\"successMessage\" class=\"message success hidden\">\n            Login exitoso. Redirigiendo...\n        </div>\n        <div id=\"errorMessage\" class=\"message error hidden\">\n            Error: Credenciales incorrectas\n        </div>\n    </div>\n\n    <script>\n        document.getElementById('loginForm').addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            const nombre = document.getElementById('nombre').value;\n            const codigo = document.getElementById('codigo').value;\n            \n            // Ocultar mensajes previos\n            document.getElementById('successMessage').classList.add('hidden');\n            document.getElementById('errorMessage').classList.add('hidden');\n            \n            // Enviar datos al endpoint\n            fetch('/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ nombre, codigo }),\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.error) {\n                    // Mostrar mensaje de error\n                    document.getElementById('errorMessage').textContent = 'Error: ' + data.error;\n                    document.getElementById('errorMessage').classList.remove('hidden');\n                } else if (data.mensaje === 'Credenciales incorrectas') {\n                    document.getElementById('errorMessage').textContent = data.mensaje;\n                    document.getElementById('errorMessage').classList.remove('hidden');\n                } else {\n                    // Mostrar mensaje de éxito\n                    document.getElementById('successMessage').classList.remove('hidden');\n                    // Redirigir al dashboard después de un breve retraso\n                    setTimeout(function() {\n                        window.location.href = data.redirectUrl;\n                    }, 1500);\n                }\n            })\n            .catch(error => {\n                document.getElementById('errorMessage').textContent = 'Error de conexión: ' + error.message;\n                document.getElementById('errorMessage').classList.remove('hidden');\n            });\n        });\n    </script>\n</body>\n</html>",
        "output": "str",
        "x": 2130,
        "y": 440,
        "wires": [
            [
                "06c78906321a9b15"
            ]
        ]
    },
    {
        "id": "6b6e6ad5fe943f91",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1920,
        "y": 440,
        "wires": [
            [
                "0b970e7d89606168"
            ]
        ]
    },
    {
        "id": "06c78906321a9b15",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Type": "text/html; charset=UTF-8"
        },
        "x": 2310,
        "y": 440,
        "wires": []
    },
    {
        "id": "3030207c98727547",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2320,
        "y": 720,
        "wires": []
    },
    {
        "id": "d13dd459f80082ff",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n    <title>Registro de Usuarios - Sistema de Gestión Escolar</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <!-- Bootstrap 5 for modern UI components -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/css/bootstrap.min.css\">\n    <!-- Font Awesome for icons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">\n    <!-- Google Font -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/google-fonts/1.0.0/google-fonts.css\">\n\n    <style>\n        :root {\n            --primary: #4e73df;\n            --secondary: #f8f9fc;\n            --dark: #5a5c69;\n            --success: #1cc88a;\n            --danger: #e74a3b;\n            --warning: #f6c23e;\n            --info: #36b9cc;\n        }\n\n        body {\n            font-family: 'Nunito', 'Poppins', sans-serif;\n            background-color: var(--secondary);\n            color: var(--dark);\n            padding-top: 56px;\n            /* Espacio para la navbar fija */\n        }\n\n        .dashboard-header {\n            background-color: white;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,\n                    59,\n                    69, .15);\n            padding: 1.5rem;\n            margin-bottom: 1.5rem;\n        }\n\n        .card {\n            border: none;\n            border-radius: 0.5rem;\n            box-shadow: 0 .15rem 1.75rem 0 rgba(58,\n                    59,\n                    69, .10);\n            margin-bottom: 1.5rem;\n        }\n\n        .card-header {\n            background-color: white;\n            border-bottom: 1px solid #e3e6f0;\n            padding: 1rem 1.25rem;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n\n        .btn-primary {\n            background-color: var(--primary);\n            border-color: var(--primary);\n        }\n\n        .btn-primary:hover {\n            background-color: #2e59d9;\n            border-color: #2653d4;\n        }\n\n        .btn-success {\n            background-color: var(--success);\n            border-color: var(--success);\n        }\n\n        .btn-success:hover {\n            background-color: #17a673;\n            border-color: #169b6b;\n        }\n\n        .status-toast {\n            position: fixed;\n            top: 70px;\n            right: 20px;\n            z-index: 1050;\n            min-width: 300px;\n        }\n\n        .form-label {\n            font-weight: 600;\n            color: var(--dark);\n            margin-bottom: 0.3rem;\n        }\n\n        .form-control:focus {\n            border-color: #bac8f3;\n            box-shadow: 0 0 0 0.2rem rgba(78,\n                    115,\n                    223,\n                    0.25);\n        }\n\n        .input-group-text {\n            background-color: var(--primary);\n            color: white;\n            border-color: var(--primary);\n        }\n\n        /* Responsive adjustments */\n        @media (max-width: 768px) {\n            .dashboard-header h1 {\n                font-size: 1.5rem;\n            }\n\n            .card-header {\n                flex-direction: column;\n                align-items: flex-start;\n            }\n\n            .card-header div {\n                margin-top: 0.5rem;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"container-fluid py-4 px-4\">\n        <!-- Header -->\n        <div class=\"dashboard-header mb-4\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h1 class=\"h3 mb-0 text-gray-800\">\n                        <i class=\"fas fa-user-plus me-2\"></i>Registro de Usuario\n                    </h1>\n                    <p class=\"text-muted small mb-0\">Formulario para registrar un nuevo usuario en el sistema</p>\n                </div>\n            </div>\n        </div>\n\n        <!-- Status Toast -->\n        <div class=\"toast status-toast align-items-center text-white bg-primary border-0\" role=\"alert\"\n            aria-live=\"assertive\" aria-atomic=\"true\" id=\"status-toast\">\n            <div class=\"d-flex\">\n                <div class=\"toast-body\">\n                    <i class=\"fas fa-info-circle me-2\"></i>\n                    <span id=\"status-message\">Mensaje de estado</span>\n                </div>\n                <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n            </div>\n        </div>\n\n        <!-- Main Content -->\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Formulario de Registro</h6>\n            </div>\n            <div class=\"card-body\">\n                <form id=\"registro-form\">\n                    <div class=\"row mb-4\">\n                        <div class=\"col-md-6 mb-3 mb-md-0\">\n                            <label for=\"nombre\" class=\"form-label\">Nombre <span class=\"text-danger\">*</span></label>\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                                <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" required placeholder=\"Ingrese nombre\">\n                            </div>\n                            <div class=\"invalid-feedback\">Por favor ingrese un nombre válido.</div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"apellido\" class=\"form-label\">Apellido <span class=\"text-danger\">*</span></label>\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                                <input type=\"text\" class=\"form-control\" id=\"apellido\" name=\"apellido\" required placeholder=\"Ingrese apellido\">\n                            </div>\n                            <div class=\"invalid-feedback\">Por favor ingrese un apellido válido.</div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"codigo\" class=\"form-label\">Código <span class=\"text-danger\">*</span></label>\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\"><i class=\"fas fa-barcode\"></i></span>\n                                <input type=\"text\" class=\"form-control\" id=\"codigo\" name=\"codigo\" placeholder=\"Código de identificación\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"d-grid gap-1 d-md-flex justify-content-md-end\">\n                                <button type=\"submit\" class=\"btn btn-success\" id=\"btn-registrar\">\n                                    <i class=\"fas fa-save me-1\"></i>Registrar Usuario\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class=\"card shadow mb-4\">\n            <div class=\"card-header\">\n                <h6 class=\"m-0 font-weight-bold text-primary\">Información</h6>\n            </div>\n            <div class=\"card-body\">\n                <p>\n                    Complete todos los campos obligatorios marcados con <span class=\"text-danger\">*</span> para\n                    registrar un nuevo usuario en el sistema.\n                </p>\n                <p class=\"mb-0\">\n                    <i class=\"fas fa-info-circle me-1 text-info\"></i>\n                    Los campos RFID y Huella son opcionales y pueden ser configurados posteriormente.\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <!-- Scripts -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.bundle.min.js\"></script>\n\n    <script>\n        $(function () {\n            console.log(\"Formulario de Registro Iniciado\");\n            \n            // Toast para mensajes de estado\n            const statusToast = new bootstrap.Toast(document.getElementById('status-toast'),\n    {\n                delay: 3000,\n                autohide: true\n    });\n            \n            // Mostrar mensajes de estado con toast\n            function showStatus(message, type = \"primary\") {\n                const toast = $(\"#status-toast\");\n                toast.removeClass().addClass(`toast status-toast align-items-center text-white bg-${type\n        } border-0`);\n                $(\"#status-message\").text(message);\n                statusToast.show();\n                console.log(message);\n    }\n    // Validación del formulario\n            function validateForm() {\n                let isValid = true;\n                \n                // Validar nombre\n                if ($(\"#nombre\").val().trim() === \"\") {\n                    $(\"#nombre\").addClass(\"is-invalid\");\n                    isValid = false;\n        } else {\n                    $(\"#nombre\").removeClass(\"is-invalid\");\n        }\n        // Validar apellido\n                if ($(\"#apellido\").val().trim() === \"\") {\n                    $(\"#apellido\").addClass(\"is-invalid\");\n                    isValid = false;\n        } else {\n                    $(\"#apellido\").removeClass(\"is-invalid\");\n        }\n                \n                return isValid;\n    }\n    // Manejar el envío del formulario\n            $(\"#registro-form\").on(\"submit\", function(e) {\n                e.preventDefault();\n                \n                if (!validateForm()) {\n                    showStatus(\"Por favor, complete todos los campos obligatorios correctamente\",\n            \"warning\");\n                    return;\n        }\n        // Recopilar datos del formulario\n                const userData = {\n                    nombre: $(\"#nombre\").val().trim(),\n                    apellido: $(\"#apellido\").val().trim(),\n                    codigo: $(\"#codigo\").val().trim()\n        };\n\n                // Desactivar botón para evitar múltiples envíos\n                $(\"#btn-registrar\").prop(\"disabled\", true).html('<i class=\"fas fa-spinner fa-spin me-1\"></i>Procesando...');\n                \n                // Enviar datos al servidor\n                $.ajax({\n                type: \"POST\",\n                url: \"/usuarios/insert/public\",\n                data: userData,\n                dataType: \"json\"\n        })\n                .done(function(response) {\n                console.log(response);\n                showStatus(\"Usuario registrado correctamente\", \"success\");\n                $(\"#registro-form\")[0].reset(); // Limpiar formulario\n                $(\"#btn-registrar\").prop(\"disabled\", false).html('<i class=\"fas fa-save me-1\"></i>Registrar Usuario');\n                })\n                .fail(function(xhr, status, error) {\n                showStatus(\"Error en la conexión: \" + error, \"danger\");\n                $(\"#btn-registrar\").prop(\"disabled\", false).html('<i class=\"fas fa-save me-1\"></i>Registrar Usuario');\n                });\n    });\n            \n            // Eliminar clase is-invalid al cambiar el valor del campo\n            $(\"input, select\").on(\"change keyup\", function() {\n                $(this).removeClass(\"is-invalid\");\n    });\n});\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 2140,
        "y": 720,
        "wires": [
            [
                "3030207c98727547"
            ]
        ]
    },
    {
        "id": "aa65dfe565d09394",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "ff05e97df14b55f8",
        "name": "Interfaz publica agregar",
        "url": "/interfaz/publica",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1960,
        "y": 720,
        "wires": [
            [
                "d13dd459f80082ff"
            ]
        ]
    },
    {
        "id": "c3ef37372439401f",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "function 28",
        "func": "// Extraer datos del cuerpo de la solicitud\nconst { nombre, apellido, codigo } = msg.payload;\n\n// Validar campos obligatorios\nif (!nombre || !apellido) {\n    msg.payload = { error: \"Faltan campos obligatorios\" };\n    return msg;\n}\n\n\n\n// Construir consulta SQL\nmsg.query = `\n    INSERT INTO usuarios(nombre, apellido, codigo)\n    VALUES($1, $2, $3)\n`;\nmsg.params = [nombre, apellido, codigo];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 980,
        "wires": [
            [
                "3a34aa023feef5b6"
            ]
        ]
    },
    {
        "id": "9f17f216a65b7682",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "",
        "url": "/usuarios/insert/public",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1620,
        "y": 980,
        "wires": [
            [
                "c3ef37372439401f"
            ]
        ]
    },
    {
        "id": "3a34aa023feef5b6",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2010,
        "y": 980,
        "wires": [
            [
                "47f2715aedda2f3a"
            ]
        ]
    },
    {
        "id": "47f2715aedda2f3a",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "da5b6773961cd50f",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2180,
        "y": 980,
        "wires": []
    },
    {
        "id": "1119b1a5145d05eb",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "topic": "api/huella/add",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 1820,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b7785ee9e1967d51",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "url": "/add/credenciales",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1600,
        "y": 1080,
        "wires": [
            [
                "1119b1a5145d05eb"
            ]
        ]
    },
    {
        "id": "11826e046e4a4e68",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "topic": "api/result",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1980,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "d0856ebbb0da8bc5",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "url": "/delete/huella",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1590,
        "y": 1120,
        "wires": [
            [
                "dcecac4d3ed2a8cc",
                "6dbc2eeb6c9fbc61"
            ]
        ]
    },
    {
        "id": "dcecac4d3ed2a8cc",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "topic": "api/huella/delete",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 1820,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ed3e39bf4dca9a4d",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "topic": "api/huella/update",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 1810,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9236a4aa4db7a706",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "url": "/update/huella",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1590,
        "y": 1200,
        "wires": [
            [
                "ed3e39bf4dca9a4d"
            ]
        ]
    },
    {
        "id": "ea1d2d300b98ec11",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "query": "msg",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1990,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "6b9cf93b9375efa6",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "UPDATE huella_usuario",
        "query": "UPDATE usuarios\nSET huella = '{{msg.payload.idHuella}}', rfid = '{{msg.payload.rfid}}', tipo_usuario = '{{msg.payload.tipo_usuario}}'\nWHERE id = '{{msg.payload.idUsuario}}'\n",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2250,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "4f1fa8d1b4922b6b",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "topic": "api/huella/store",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2000,
        "y": 1120,
        "wires": [
            [
                "6b9cf93b9375efa6"
            ]
        ]
    },
    {
        "id": "c8437c02241f3521",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/sensor/movimiento",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1600,
        "y": 1300,
        "wires": [
            [
                "dd7bf825610fc7ed"
            ]
        ]
    },
    {
        "id": "dd7bf825610fc7ed",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/mensaje",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 1950,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e190c629b9d6ae61",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/result",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 2180,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d0ca546e69d643cd",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/huella/delete/result",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1600,
        "y": 1360,
        "wires": [
            [
                "e190c629b9d6ae61"
            ]
        ]
    },
    {
        "id": "332911bad12ad5bb",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/huella/update/result",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1600,
        "y": 1400,
        "wires": [
            [
                "e190c629b9d6ae61"
            ]
        ]
    },
    {
        "id": "58ad0f66fff0d5b3",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/huella",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1560,
        "y": 1500,
        "wires": [
            [
                "0482555aef22b378"
            ]
        ]
    },
    {
        "id": "74cf72363b4c635f",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/rfid",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1550,
        "y": 1540,
        "wires": [
            [
                "f20b68a74994fe58"
            ]
        ]
    },
    {
        "id": "bf47f72b168f89d1",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/codigo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1560,
        "y": 1460,
        "wires": [
            [
                "9051a259c0cdbdeb"
            ]
        ]
    },
    {
        "id": "9051a259c0cdbdeb",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "query": "SELECT registrar_asistencia(p_codigo => '{{msg.payload.valor}}', p_huella => null, p_rfid => null);",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1770,
        "y": 1460,
        "wires": [
            [
                "203c53a8a3898ce8"
            ]
        ]
    },
    {
        "id": "f20b68a74994fe58",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "query": "SELECT registrar_asistencia(p_codigo => null p_huella => null, p_rfid => '{{msg.payload.rfid}}');",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1770,
        "y": 1540,
        "wires": [
            [
                "203c53a8a3898ce8"
            ]
        ]
    },
    {
        "id": "0482555aef22b378",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "query": "SELECT registrar_asistencia(p_codigo => null, p_huella => '{{msg.payload.huella}}', p_rfid => null);",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1770,
        "y": 1500,
        "wires": [
            [
                "203c53a8a3898ce8"
            ]
        ]
    },
    {
        "id": "597adc94c6ec5363",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "",
        "url": "/asignar-usuario-clase",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 1680,
        "wires": [
            [
                "d063961932a825a4"
            ]
        ]
    },
    {
        "id": "d063961932a825a4",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "Preparar consultas",
        "func": "msg.queryUsuarios = \"SELECT id, nombre, apellido, tipo_usuario FROM usuarios ORDER BY apellido, nombre\";\nmsg.queryClases = \"SELECT id, nombre FROM clases ORDER BY nombre\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1680,
        "wires": [
            [
                "b3d083250e190187"
            ]
        ]
    },
    {
        "id": "4fab4d070e2fe0bc",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "Guardar usuarios",
        "func": "\n// Verificar si hay datos y guardarlos\nif (!msg.payload || !Array.isArray(msg.payload) || msg.payload.length === 0) {\n    node.warn(\"⚠️ ERROR: No se recibieron usuarios de la base de datos\");\n    node.warn(JSON.stringify(msg.payload));\n} else {\n    node.warn(\"✅ Usuarios recuperados: \" + msg.payload.length);\n}\n\n// Guardar los usuarios en una propiedad específica\nmsg.usuarios = Array.isArray(msg.payload) ? msg.payload : [];\n\n// IMPORTANTE: Crear nueva consulta simple para clases\nmsg.payload = null; // Limpiamos para evitar conflictos\nmsg.topic = \"SELECT id, nombre FROM clases ORDER BY nombre\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 1680,
        "wires": [
            [
                "efaa9c14056bec4f"
            ]
        ]
    },
    {
        "id": "b3d083250e190187",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "Consultar Usuarios",
        "query": " SELECT id, nombre, apellido, tipo_usuario FROM usuarios ORDER BY apellido, nombre",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1270,
        "y": 1680,
        "wires": [
            [
                "4fab4d070e2fe0bc"
            ]
        ]
    },
    {
        "id": "efaa9c14056bec4f",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "Consulta Clases",
        "query": "{{msg.topic}}",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1670,
        "y": 1680,
        "wires": [
            [
                "d12b2ff6f2b6187d"
            ]
        ]
    },
    {
        "id": "d12b2ff6f2b6187d",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "Combinar datos",
        "func": "// Recuperar usuarios guardados anteriormente\nconst usuarios = msg.usuarios || [];\n\n// Verificar datos de clases que vienen del nodo PostgreSQL anterior\nif (!msg.payload) {\n    node.warn(\"⚠️ ERROR: Payload de clases es undefined o null\");\n} else if (!Array.isArray(msg.payload)) {\n    node.warn(\"⚠️ ERROR: Payload de clases no es un array: \" + typeof msg.payload);\n    node.warn(JSON.stringify(msg.payload));\n} else {\n    node.warn(\"✅ Clases recuperadas: \" + msg.payload.length);\n}\n\n// Asegurar que clases sea un array\nconst clases = Array.isArray(msg.payload) ? msg.payload : [];\n\n// Registrar para depuración\nnode.warn(\"# Usuarios: \" + usuarios.length);\nnode.warn(\"# Clases: \" + clases.length);\nnode.warn(\"Clases: \" + JSON.stringify(clases));\n\n// Crear nuevo payload con ambos conjuntos de datos\nmsg.payload = { \n    usuarios: usuarios, \n    clases: clases \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1680,
        "wires": [
            [
                "ea1d9a0b7eabdfe9"
            ]
        ]
    },
    {
        "id": "ea1d9a0b7eabdfe9",
        "type": "template",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Asignar Usuario a Clase</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .container {\n            background-color: #f9f9f9;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        h1 {\n            color: #333;\n            text-align: center;\n        }\n        form {\n            display: flex;\n            flex-direction: column;\n            gap: 15px;\n        }\n        label {\n            font-weight: bold;\n        }\n        select, button {\n            padding: 10px;\n            border-radius: 4px;\n            border: 1px solid #ddd;\n        }\n        button {\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            cursor: pointer;\n            font-weight: bold;\n        }\n        button:hover {\n            background-color: #45a049;\n        }\n        .error {\n            color: red;\n            font-weight: bold;\n            margin: 10px 0;\n            padding: 10px;\n            background-color: #ffeeee;\n            border-radius: 4px;\n            border-left: 4px solid red;\n        }\n        .success {\n            color: green;\n            font-weight: bold;\n            margin: 10px 0;\n            padding: 10px;\n            background-color: #eeffee;\n            border-radius: 4px;\n            border-left: 4px solid green;\n        }\n        .info-box {\n            background-color: #e6f7ff;\n            border-left: 4px solid #1890ff;\n            padding: 10px;\n            margin-bottom: 15px;\n            border-radius: 4px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Asignar Usuario a Clase</h1>\n        \n        <div id=\"messages\"></div>\n        \n        <div class=\"info-box\">\n            <p>Seleccione un usuario (alumno o profesor) y una clase para realizar la asignación.</p>\n            <p>El sistema detectará automáticamente si se trata de un alumno o profesor y realizará la asignación en la tabla correspondiente.</p>\n        </div>\n        \n        <form id=\"asignacionForm\">\n            <div>\n                <label for=\"usuario\">Seleccionar Usuario:</label>\n                <select id=\"usuario\" name=\"usuario_id\" required>\n                    <option value=\"\">-- Seleccione un usuario --</option>\n                    {{#payload.usuarios}}\n                    <option value=\"{{id}}\" data-tipo=\"{{tipo_usuario}}\">{{apellido}}, {{nombre}} ({{tipo_usuario}})</option>\n                    {{/payload.usuarios}}\n                </select>\n                {{^payload.usuarios.length}}\n                <p class=\"error\">No hay usuarios disponibles.</p>\n                {{/payload.usuarios.length}}\n            </div>\n            \n            <div>\n                <label for=\"clase\">Seleccionar Clase:</label>\n                <select id=\"clase\" name=\"clase_id\" required>\n                    <option value=\"\">-- Seleccione una clase --</option>\n                    {{#payload.clases}}\n                    <option value=\"{{id}}\">{{nombre}}</option>\n                    {{/payload.clases}}\n                </select>\n                {{^payload.clases.length}}\n                <p class=\"error\">No hay clases disponibles.</p>\n                {{/payload.clases.length}}\n            </div>\n\n            <input type=\"hidden\" id=\"tipo_usuario\" name=\"tipo_usuario\" value=\"\">\n            \n            <button type=\"submit\">Asignar Usuario a Clase</button>\n        </form>\n    </div>\n\n    <script>\n        // Actualizar tipo_usuario al cambiar usuario\n        document.getElementById('usuario').addEventListener('change', function(e) {\n            const selectedOption = e.target.options[e.target.selectedIndex];\n            const tipoUsuario = selectedOption.getAttribute('data-tipo');\n            document.getElementById('tipo_usuario').value = tipoUsuario;\n            \n            // Mostrar información sobre el tipo de asignación\n            const messagesDiv = document.getElementById('messages');\n            if (tipoUsuario === 'Alumno') {\n                messagesDiv.innerHTML = '<p class=\"info-box\">Se asignará un alumno a la clase seleccionada.</p>';\n            } else if (tipoUsuario === 'Profesor') {\n                messagesDiv.innerHTML = '<p class=\"info-box\">Se asignará un profesor a la clase seleccionada.</p>';\n            } else {\n                messagesDiv.innerHTML = '';\n            }\n        });\n\n        // Validación y envío del formulario\n        document.getElementById('asignacionForm').addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            // Obtener valores\n            const usuario_id = document.getElementById('usuario').value;\n            const clase_id = document.getElementById('clase').value;\n            const tipo_usuario = document.getElementById('tipo_usuario').value;\n\n            // Validar campos vacíos\n            if (!usuario_id || !clase_id) {\n                document.getElementById('messages').innerHTML = \n                    '<p class=\"error\">Debe seleccionar un usuario y una clase</p>';\n                return;\n            }\n\n            // Validar tipo de usuario\n            if (tipo_usuario !== 'Alumno' && tipo_usuario !== 'Profesor') {\n                document.getElementById('messages').innerHTML = \n                    '<p class=\"error\">Tipo de usuario no válido. Debe ser Alumno o Profesor.</p>';\n                return;\n            }\n\n            // Mostrar mensaje de procesamiento\n            document.getElementById('messages').innerHTML = \n                '<p class=\"info-box\">Procesando asignación...</p>';\n\n            // Crear objeto de datos\n            const data = {\n                usuario_id: parseInt(usuario_id),\n                clase_id: parseInt(clase_id),\n                tipo_usuario: tipo_usuario\n            };\n\n            // Enviar datos\n            fetch('/procesar-asignacion', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(data)\n            })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Error en la respuesta del servidor: ' + response.status);\n                }\n                return response.json();\n            })\n            .then(result => {\n                const messagesDiv = document.getElementById('messages');\n                if (result.success) {\n                    messagesDiv.innerHTML = `<p class=\"success\">${result.message}</p>`;\n                    document.getElementById('asignacionForm').reset();\n                    document.getElementById('tipo_usuario').value = \"\"; // Resetear campo oculto\n                } else {\n                    messagesDiv.innerHTML = `<p class=\"error\">${result.message}</p>`;\n                }\n            })\n            .catch(error => {\n                document.getElementById('messages').innerHTML = \n                    `<p class=\"error\">Error de conexión: ${error.message}</p>`;\n            });\n        });\n    </script>\n</body>\n</html>",
        "output": "str",
        "x": 2060,
        "y": 1680,
        "wires": [
            [
                "117ea5d6d88600ec"
            ]
        ]
    },
    {
        "id": "117ea5d6d88600ec",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2230,
        "y": 1680,
        "wires": []
    },
    {
        "id": "bc170795aef32161",
        "type": "http in",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "",
        "url": "/procesar-asignacion",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 1740,
        "wires": [
            [
                "a16c0d805d8adaf3"
            ]
        ]
    },
    {
        "id": "3f06dc485fd5b5f8",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "insertar en db",
        "query": "{{msg.topic}}   ",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1200,
        "y": 1740,
        "wires": [
            [
                "46ec88d7909bbd42"
            ]
        ]
    },
    {
        "id": "46ec88d7909bbd42",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "formatear respuesta",
        "func": "// Check if there's an error from the database\nif (msg.error) {\n    // Check if it's a duplicate key error\n    if (msg.error.toString().includes('duplicate key') || \n        msg.error.toString().includes('violates unique constraint') || \n        msg.error.toString().includes('already exists')) {\n        \n        msg.statusCode = 409; // Conflict status code\n        msg.payload = {\n            success: false,\n            message: `Este ${msg.tipoAsignacion === \"alumno\" ? \"alumno\" : \"profesor\"} ya está asignado a esta clase.`,\n            error: \"duplicate_assignment\"\n        };\n    } else {\n        // Other database errors\n        msg.statusCode = 500;\n        msg.payload = {\n            success: false,\n            message: \"Error en la base de datos al asignar el usuario a la clase.\",\n            error: \"database_error\"\n        };\n    }\n    return msg;\n}\n\n// No error, check if operation was successful\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length > 0) {\n    // Éxito: se insertó el registro\n    msg.statusCode = 200;\n    msg.payload = {\n        success: true,\n        message: `${msg.tipoAsignacion === \"alumno\" ? \"Alumno\" : \"Profesor\"} asignado a la clase exitosamente`,\n        data: msg.payload[0]\n    };\n} else {\n    // No se insertó o hubo un error no capturado\n    msg.statusCode = 500;\n    msg.payload = {\n        success: false,\n        message: \"No se pudo asignar el usuario a la clase por un error desconocido.\"\n    };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1740,
        "wires": [
            [
                "1b52e5c9866f4a50"
            ]
        ]
    },
    {
        "id": "1b52e5c9866f4a50",
        "type": "http response",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 1740,
        "wires": []
    },
    {
        "id": "a16c0d805d8adaf3",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "3caf614917293ad3",
        "name": "Validar datos",
        "func": "// Validar que tenemos todos los datos necesarios\nif (!msg.payload || !msg.payload.usuario_id || !msg.payload.clase_id || !msg.payload.tipo_usuario) {\n    msg.statusCode = 400;\n    msg.payload = {\n        success: false,\n        message: \"Faltan datos requeridos para la asignación\"\n    };\n    return [null, msg]; // Enviar a la segunda salida (error)\n}\n\n// Sanitizar los datos\nconst usuario_id = parseInt(msg.payload.usuario_id);\nconst clase_id = parseInt(msg.payload.clase_id);\nconst tipo_usuario = msg.payload.tipo_usuario;\n\n// Validar que los IDs sean números válidos\nif (isNaN(usuario_id) || isNaN(clase_id)) {\n    msg.statusCode = 400;\n    msg.payload = {\n        success: false,\n        message: \"ID de usuario o clase inválido\"\n    };\n    return [null, msg]; // Enviar a la segunda salida (error)\n}\n\n// Determinar la tabla y consulta SQL según el tipo de usuario\nif (tipo_usuario === \"Alumno\") {\n    // Insertar en tabla clase_alumno\n    msg.topic = \"INSERT INTO clase_alumno (id_clase, id_alumno) VALUES ($1, $2) RETURNING id\";\n    msg.params = [clase_id, usuario_id];\n    msg.tipoAsignacion = \"alumno\";\n} else if (tipo_usuario === \"Profesor\") {\n    // Insertar en tabla clase_profesor\n    msg.topic = \"INSERT INTO clase_profesor (id_clase, id_profesor) VALUES ($1, $2) RETURNING id\";\n    msg.params = [clase_id, usuario_id];\n    msg.tipoAsignacion = \"profesor\";\n} else {\n    // Tipo de usuario no válido\n    msg.statusCode = 400;\n    msg.payload = {\n        success: false,\n        message: \"Tipo de usuario no válido. Debe ser 'Alumno' o 'Profesor'\"\n    };\n    return [null, msg]; // Enviar a la segunda salida (error)\n}\n\n// Registrar para depuración\nnode.warn(`Insertando: ${tipo_usuario} ${usuario_id} a Clase ${clase_id}`);\n\nreturn [msg, null]; // Enviar a la primera salida (éxito)",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1740,
        "wires": [
            [
                "3f06dc485fd5b5f8"
            ]
        ]
    },
    {
        "id": "7ca5f24b5662dee6",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/pantalla/registrar",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1590,
        "y": 1580,
        "wires": [
            [
                "2391539427e997e9"
            ]
        ]
    },
    {
        "id": "2391539427e997e9",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "query": "INSERT INTO usuarios (nombre, apellido, tipo_usuario,codigo)\nVALUES ('{{msg.payload.nombre}}', '{{msg.payload.apellido}}', 'Alumno', '{{msg.payload.codigo}}')",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1770,
        "y": 1580,
        "wires": [
            [
                "203c53a8a3898ce8"
            ]
        ]
    },
    {
        "id": "90f6df06e557b07a",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/result/form",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 2120,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f4d2cd1cae3e71ca",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/identificacion",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 2130,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2a41684526b71ff2",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/result/form",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2350,
        "y": 1300,
        "wires": [
            [
                "87397ef39589ea70"
            ]
        ]
    },
    {
        "id": "203c53a8a3898ce8",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "function 29",
        "func": "msg.payload = msg.payload[0].registrar_asistencia;  // Extraes el mensaje\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1520,
        "wires": [
            [
                "e190c629b9d6ae61"
            ]
        ]
    },
    {
        "id": "1f74cc19725e4c9a",
        "type": "mqtt in",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/identificacion",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c6a5131be9de9943",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2360,
        "y": 1340,
        "wires": [
            [
                "d35ca6812b4f33e3"
            ]
        ]
    },
    {
        "id": "d35ca6812b4f33e3",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "query": "SELECT id FROM usuarios WHERE codigo = '{{msg.payload.valor}}'",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2570,
        "y": 1340,
        "wires": [
            [
                "778b825a5346707c"
            ]
        ]
    },
    {
        "id": "778b825a5346707c",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "function 30",
        "func": "// Extraemos el primer objeto del array\nlet usuario = msg.payload[0].id;\n\n// Creamos un nuevo objeto con la estructura deseada\nlet nuevoObjeto = {\n    idUsuario: usuario,\n    idHuella: usuario\n};\n\n// Asignamos el nuevo objeto al payload\nmsg.payload = nuevoObjeto;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1400,
        "wires": [
            [
                "a3af976e01a372cf"
            ]
        ]
    },
    {
        "id": "a3af976e01a372cf",
        "type": "mqtt out",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "topic": "api/huella/add",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c6a5131be9de9943",
        "x": 2560,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6dbc2eeb6c9fbc61",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "function 31",
        "func": "// Asegúrate de que msg.payload tiene el valor que necesitas\nlet idUsuario = msg.payload.idHuella;  // Asumiendo que id viene en msg.payload.id\n\n// Construimos la consulta SQL utilizando la sintaxis de parámetros\nmsg.query = `\n    UPDATE usuarios\n    SET huella = $1, rfid = $2\n    WHERE id = $3\n`;\nmsg.params = [null, null, idUsuario];  // Pasamos el valor de idUsuario como parámetro\n\n// Retorna el mensaje para enviarlo al nodo de base de datos\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1160,
        "wires": [
            [
                "ea1d2d300b98ec11"
            ]
        ]
    },
    {
        "id": "e69f3f152bc2a22c",
        "type": "inject",
        "z": "ffe91d66cf0eac12",
        "g": "3ab7cd7a9b0dcd92",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"idHuella\":4}",
        "payloadType": "json",
        "x": 1590,
        "y": 1160,
        "wires": [
            [
                "dcecac4d3ed2a8cc"
            ]
        ]
    },
    {
        "id": "c23b09b5fed36626",
        "type": "postgresql",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "",
        "query": "",
        "postgreSQLConfig": "3cd515a78cadaa56",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2670,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "87397ef39589ea70",
        "type": "function",
        "z": "ffe91d66cf0eac12",
        "g": "e057e6a5e41fb417",
        "name": "function 32",
        "func": "// Asegúrate de que msg.payload tiene el valor que necesitas\nlet nombre = msg.payload.nombre;\nlet apellido = msg.payload.apellido;\nlet codigo = msg.payload.codigo;\nif (nombre !== '' || apellido !== '' || codigo !== ''){\n    msg.query = `\n    INSERT INTO usuarios\n    (nombre, apellido, tipo_usuario, codigo)\n    VALUES ($1, $2, 'Alumno', $3);\n`;\n    msg.params = [nombre, apellido, codigo];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1300,
        "wires": [
            [
                "c23b09b5fed36626"
            ]
        ]
    },
    {
        "id": "3cd515a78cadaa56",
        "type": "postgreSQLConfig",
        "name": "asistencia",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "asistencia",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "1000",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "finer",
        "userFieldType": "str",
        "password": "linux123",
        "passwordFieldType": "str"
    },
    {
        "id": "c6a5131be9de9943",
        "type": "mqtt-broker",
        "name": "red: MrMexico2014",
        "broker": "192.168.0.4",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]